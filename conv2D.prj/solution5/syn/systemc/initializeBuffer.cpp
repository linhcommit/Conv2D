// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "initializeBuffer.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic initializeBuffer::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic initializeBuffer::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> initializeBuffer::ap_ST_fsm_state1 = "1";
const sc_lv<3> initializeBuffer::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> initializeBuffer::ap_ST_fsm_state5 = "100";
const bool initializeBuffer::ap_const_boolean_1 = true;
const sc_lv<32> initializeBuffer::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> initializeBuffer::ap_const_lv32_1 = "1";
const bool initializeBuffer::ap_const_boolean_0 = false;
const sc_lv<1> initializeBuffer::ap_const_lv1_0 = "0";
const sc_lv<1> initializeBuffer::ap_const_lv1_1 = "1";
const sc_lv<64> initializeBuffer::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<31> initializeBuffer::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<5> initializeBuffer::ap_const_lv5_1F = "11111";
const sc_lv<5> initializeBuffer::ap_const_lv5_1E = "11110";
const sc_lv<5> initializeBuffer::ap_const_lv5_1D = "11101";
const sc_lv<5> initializeBuffer::ap_const_lv5_1C = "11100";
const sc_lv<5> initializeBuffer::ap_const_lv5_1B = "11011";
const sc_lv<5> initializeBuffer::ap_const_lv5_1A = "11010";
const sc_lv<5> initializeBuffer::ap_const_lv5_19 = "11001";
const sc_lv<5> initializeBuffer::ap_const_lv5_18 = "11000";
const sc_lv<32> initializeBuffer::ap_const_lv32_2 = "10";
const sc_lv<5> initializeBuffer::ap_const_lv5_0 = "00000";
const sc_lv<5> initializeBuffer::ap_const_lv5_17 = "10111";
const sc_lv<5> initializeBuffer::ap_const_lv5_16 = "10110";
const sc_lv<5> initializeBuffer::ap_const_lv5_1 = "1";
const sc_lv<5> initializeBuffer::ap_const_lv5_15 = "10101";
const sc_lv<5> initializeBuffer::ap_const_lv5_14 = "10100";
const sc_lv<5> initializeBuffer::ap_const_lv5_2 = "10";
const sc_lv<5> initializeBuffer::ap_const_lv5_13 = "10011";
const sc_lv<5> initializeBuffer::ap_const_lv5_12 = "10010";
const sc_lv<5> initializeBuffer::ap_const_lv5_3 = "11";
const sc_lv<5> initializeBuffer::ap_const_lv5_11 = "10001";
const sc_lv<5> initializeBuffer::ap_const_lv5_10 = "10000";
const sc_lv<5> initializeBuffer::ap_const_lv5_4 = "100";
const sc_lv<5> initializeBuffer::ap_const_lv5_F = "1111";
const sc_lv<5> initializeBuffer::ap_const_lv5_E = "1110";
const sc_lv<5> initializeBuffer::ap_const_lv5_5 = "101";
const sc_lv<5> initializeBuffer::ap_const_lv5_D = "1101";
const sc_lv<5> initializeBuffer::ap_const_lv5_C = "1100";
const sc_lv<5> initializeBuffer::ap_const_lv5_6 = "110";
const sc_lv<5> initializeBuffer::ap_const_lv5_B = "1011";
const sc_lv<5> initializeBuffer::ap_const_lv5_A = "1010";
const sc_lv<5> initializeBuffer::ap_const_lv5_7 = "111";
const sc_lv<5> initializeBuffer::ap_const_lv5_9 = "1001";
const sc_lv<5> initializeBuffer::ap_const_lv5_8 = "1000";
const sc_lv<64> initializeBuffer::ap_const_lv64_1 = "1";
const sc_lv<31> initializeBuffer::ap_const_lv31_1 = "1";
const sc_lv<15> initializeBuffer::ap_const_lv15_64 = "1100100";

initializeBuffer::initializeBuffer(sc_module_name name) : sc_module(name), mVcdFile(0) {
    conv2D_mac_muladdbkb_U1 = new conv2D_mac_muladdbkb<1,1,8,15,15,15>("conv2D_mac_muladdbkb_U1");
    conv2D_mac_muladdbkb_U1->din0(grp_fu_1570_p0);
    conv2D_mac_muladdbkb_U1->din1(tmp_21_reg_2061);
    conv2D_mac_muladdbkb_U1->din2(tmp_22_reg_2071);
    conv2D_mac_muladdbkb_U1->dout(grp_fu_1570_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_758_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_ik_row_phi_fu_559_p4);
    sensitive << ( ik_row_reg_555 );
    sensitive << ( exitcond_flatten_reg_2047 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_15_mid2_v_v_v_reg_2056 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_0_write_assi_fu_1245_p3 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_1_write_assi_fu_1252_p3 );

    SC_METHOD(thread_ap_return_10);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_10_write_ass_fu_1315_p3 );

    SC_METHOD(thread_ap_return_11);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_11_write_ass_fu_1322_p3 );

    SC_METHOD(thread_ap_return_12);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_12_write_ass_fu_1329_p3 );

    SC_METHOD(thread_ap_return_13);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_13_write_ass_fu_1336_p3 );

    SC_METHOD(thread_ap_return_14);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_14_write_ass_fu_1343_p3 );

    SC_METHOD(thread_ap_return_15);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_15_write_ass_fu_1350_p3 );

    SC_METHOD(thread_ap_return_16);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_16_write_ass_fu_1357_p3 );

    SC_METHOD(thread_ap_return_17);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_17_write_ass_fu_1364_p3 );

    SC_METHOD(thread_ap_return_18);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_18_write_ass_fu_1371_p3 );

    SC_METHOD(thread_ap_return_19);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_19_write_ass_fu_1378_p3 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_2_write_assi_fu_1259_p3 );

    SC_METHOD(thread_ap_return_20);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_20_write_ass_fu_1385_p3 );

    SC_METHOD(thread_ap_return_21);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_21_write_ass_fu_1392_p3 );

    SC_METHOD(thread_ap_return_22);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_22_write_ass_fu_1399_p3 );

    SC_METHOD(thread_ap_return_23);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_23_write_ass_fu_1406_p3 );

    SC_METHOD(thread_ap_return_24);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_24_write_ass_fu_1413_p3 );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_3_write_assi_fu_1266_p3 );

    SC_METHOD(thread_ap_return_4);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_4_write_assi_fu_1273_p3 );

    SC_METHOD(thread_ap_return_5);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_5_write_assi_fu_1280_p3 );

    SC_METHOD(thread_ap_return_6);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_6_write_assi_fu_1287_p3 );

    SC_METHOD(thread_ap_return_7);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_7_write_assi_fu_1294_p3 );

    SC_METHOD(thread_ap_return_8);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_8_write_assi_fu_1301_p3 );

    SC_METHOD(thread_ap_return_9);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_9_write_assi_fu_1308_p3 );

    SC_METHOD(thread_bound_fu_618_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_618_p00 );

    SC_METHOD(thread_bound_fu_618_p00);
    sensitive << ( kernel_size_col );

    SC_METHOD(thread_bound_fu_618_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_618_p10 );

    SC_METHOD(thread_bound_fu_618_p10);
    sensitive << ( kernel_size_row );

    SC_METHOD(thread_bound_fu_618_p2);
    sensitive << ( bound_fu_618_p0 );
    sensitive << ( bound_fu_618_p1 );

    SC_METHOD(thread_buffer_0_write_assi_fu_1245_p3);
    sensitive << ( buffer_0_read );
    sensitive << ( write_flag_1_fu_156 );
    sensitive << ( buffer_1_fu_168 );

    SC_METHOD(thread_buffer_10_write_ass_fu_1315_p3);
    sensitive << ( buffer_10_read );
    sensitive << ( buffer10_1_fu_320 );
    sensitive << ( write_flag32_1_fu_328 );

    SC_METHOD(thread_buffer_11_write_ass_fu_1322_p3);
    sensitive << ( buffer_11_read );
    sensitive << ( buffer11_1_fu_308 );
    sensitive << ( write_flag35_1_fu_316 );

    SC_METHOD(thread_buffer_12_write_ass_fu_1329_p3);
    sensitive << ( buffer_12_read );
    sensitive << ( buffer12_1_fu_296 );
    sensitive << ( write_flag38_1_fu_304 );

    SC_METHOD(thread_buffer_13_write_ass_fu_1336_p3);
    sensitive << ( buffer_13_read );
    sensitive << ( buffer13_1_fu_284 );
    sensitive << ( write_flag41_1_fu_292 );

    SC_METHOD(thread_buffer_14_write_ass_fu_1343_p3);
    sensitive << ( buffer_14_read );
    sensitive << ( buffer14_1_fu_272 );
    sensitive << ( write_flag44_1_fu_280 );

    SC_METHOD(thread_buffer_15_write_ass_fu_1350_p3);
    sensitive << ( buffer_15_read );
    sensitive << ( buffer1550_1_fu_260 );
    sensitive << ( write_flag48_1_fu_268 );

    SC_METHOD(thread_buffer_16_write_ass_fu_1357_p3);
    sensitive << ( buffer_16_read );
    sensitive << ( buffer1655_1_fu_248 );
    sensitive << ( write_flag53_1_fu_256 );

    SC_METHOD(thread_buffer_17_write_ass_fu_1364_p3);
    sensitive << ( buffer_17_read );
    sensitive << ( buffer17_1_fu_236 );
    sensitive << ( write_flag57_1_fu_244 );

    SC_METHOD(thread_buffer_18_write_ass_fu_1371_p3);
    sensitive << ( buffer_18_read );
    sensitive << ( buffer18_1_fu_224 );
    sensitive << ( write_flag60_1_fu_232 );

    SC_METHOD(thread_buffer_19_write_ass_fu_1378_p3);
    sensitive << ( buffer_19_read );
    sensitive << ( buffer19_1_fu_212 );
    sensitive << ( write_flag63_1_fu_220 );

    SC_METHOD(thread_buffer_1_write_assi_fu_1252_p3);
    sensitive << ( buffer_1_read );
    sensitive << ( write_flag4_1_fu_180 );
    sensitive << ( buffer16_1_fu_192 );

    SC_METHOD(thread_buffer_20_write_ass_fu_1385_p3);
    sensitive << ( buffer_20_read );
    sensitive << ( buffer20_1_fu_200 );
    sensitive << ( write_flag66_1_fu_208 );

    SC_METHOD(thread_buffer_21_write_ass_fu_1392_p3);
    sensitive << ( buffer_21_read );
    sensitive << ( buffer21_1_fu_188 );
    sensitive << ( write_flag69_1_fu_196 );

    SC_METHOD(thread_buffer_22_write_ass_fu_1399_p3);
    sensitive << ( buffer_22_read );
    sensitive << ( buffer22_1_fu_176 );
    sensitive << ( write_flag72_1_fu_184 );

    SC_METHOD(thread_buffer_23_write_ass_fu_1406_p3);
    sensitive << ( buffer_23_read );
    sensitive << ( buffer23_1_fu_164 );
    sensitive << ( write_flag75_1_fu_172 );

    SC_METHOD(thread_buffer_24_write_ass_fu_1413_p3);
    sensitive << ( buffer_24_read );
    sensitive << ( buffer24_1_fu_152 );
    sensitive << ( write_flag78_1_fu_160 );

    SC_METHOD(thread_buffer_2_write_assi_fu_1259_p3);
    sensitive << ( buffer_2_read );
    sensitive << ( write_flag8_1_fu_204 );
    sensitive << ( buffer2_1_fu_216 );

    SC_METHOD(thread_buffer_3_write_assi_fu_1266_p3);
    sensitive << ( buffer_3_read );
    sensitive << ( write_flag11_1_fu_228 );
    sensitive << ( buffer3_1_fu_240 );

    SC_METHOD(thread_buffer_4_write_assi_fu_1273_p3);
    sensitive << ( buffer_4_read );
    sensitive << ( write_flag14_1_fu_252 );
    sensitive << ( buffer4_1_fu_264 );

    SC_METHOD(thread_buffer_5_write_assi_fu_1280_p3);
    sensitive << ( buffer_5_read );
    sensitive << ( write_flag17_1_fu_276 );
    sensitive << ( buffer5_1_fu_288 );

    SC_METHOD(thread_buffer_6_write_assi_fu_1287_p3);
    sensitive << ( buffer_6_read );
    sensitive << ( write_flag20_1_fu_300 );
    sensitive << ( buffer6_1_fu_312 );

    SC_METHOD(thread_buffer_7_write_assi_fu_1294_p3);
    sensitive << ( buffer_7_read );
    sensitive << ( write_flag23_1_fu_324 );
    sensitive << ( buffer7_1_fu_336 );

    SC_METHOD(thread_buffer_8_write_assi_fu_1301_p3);
    sensitive << ( buffer_8_read );
    sensitive << ( buffer8_1_fu_344 );
    sensitive << ( write_flag26_1_fu_348 );

    SC_METHOD(thread_buffer_9_write_assi_fu_1308_p3);
    sensitive << ( buffer_9_read );
    sensitive << ( buffer9_1_fu_332 );
    sensitive << ( write_flag29_1_fu_340 );

    SC_METHOD(thread_exitcond_flatten_fu_758_p2);
    sensitive << ( indvar_flatten_reg_533 );
    sensitive << ( bound_reg_2042 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_fu_1570_p0);
    sensitive << ( exitcond_flatten_reg_2047 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_i_buffer_1_mid2_fu_780_p3);
    sensitive << ( i_buffer_1_reg_566 );
    sensitive << ( tmp_s_fu_753_p2 );
    sensitive << ( i_buffer_2_dup_fu_775_p2 );

    SC_METHOD(thread_i_buffer_2_dup_fu_775_p2);
    sensitive << ( i_buffer_reg_544 );
    sensitive << ( smax_cast_reg_2037 );

    SC_METHOD(thread_i_buffer_mid2_fu_813_p3);
    sensitive << ( i_buffer_reg_544 );
    sensitive << ( tmp_s_fu_753_p2 );
    sensitive << ( i_buffer_2_dup_fu_775_p2 );

    SC_METHOD(thread_ik_col_2_fu_835_p2);
    sensitive << ( ik_col_mid2_fu_788_p3 );

    SC_METHOD(thread_ik_col_cast_fu_749_p1);
    sensitive << ( ik_col_reg_577 );

    SC_METHOD(thread_ik_col_mid2_fu_788_p3);
    sensitive << ( ik_col_reg_577 );
    sensitive << ( tmp_s_fu_753_p2 );

    SC_METHOD(thread_ik_row_2_fu_769_p2);
    sensitive << ( ap_phi_mux_ik_row_phi_fu_559_p4 );

    SC_METHOD(thread_in_data_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_17_cast_fu_841_p1 );

    SC_METHOD(thread_in_data_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_indvar_flatten_next_fu_763_p2);
    sensitive << ( indvar_flatten_reg_533 );

    SC_METHOD(thread_smax_cast_fu_606_p1);
    sensitive << ( smax_fu_598_p3 );

    SC_METHOD(thread_smax_fu_598_p3);
    sensitive << ( tmp_fu_588_p2 );
    sensitive << ( tmp_19_fu_594_p1 );

    SC_METHOD(thread_tmp_15_mid2_v_v_v_fu_796_p3);
    sensitive << ( ap_phi_mux_ik_row_phi_fu_559_p4 );
    sensitive << ( tmp_s_fu_753_p2 );
    sensitive << ( ik_row_2_fu_769_p2 );

    SC_METHOD(thread_tmp_17_cast_fu_841_p1);
    sensitive << ( grp_fu_1570_p3 );

    SC_METHOD(thread_tmp_18_fu_825_p2);
    sensitive << ( i_buffer_1_mid2_fu_780_p3 );

    SC_METHOD(thread_tmp_19_fu_594_p1);
    sensitive << ( kernel_size_col );

    SC_METHOD(thread_tmp_20_fu_804_p2);
    sensitive << ( index_row_out );
    sensitive << ( tmp_15_mid2_v_v_v_fu_796_p3 );

    SC_METHOD(thread_tmp_21_fu_809_p1);
    sensitive << ( tmp_20_fu_804_p2 );

    SC_METHOD(thread_tmp_22_fu_821_p1);
    sensitive << ( ik_col_mid2_fu_788_p3 );

    SC_METHOD(thread_tmp_23_fu_831_p1);
    sensitive << ( i_buffer_1_mid2_fu_780_p3 );

    SC_METHOD(thread_tmp_fu_588_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( kernel_size_col );

    SC_METHOD(thread_tmp_s_fu_753_p2);
    sensitive << ( kernel_size_col );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ik_col_cast_fu_749_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond_flatten_fu_758_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "initializeBuffer_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, buffer_0_read, "(port)buffer_0_read");
    sc_trace(mVcdFile, buffer_1_read, "(port)buffer_1_read");
    sc_trace(mVcdFile, buffer_2_read, "(port)buffer_2_read");
    sc_trace(mVcdFile, buffer_3_read, "(port)buffer_3_read");
    sc_trace(mVcdFile, buffer_4_read, "(port)buffer_4_read");
    sc_trace(mVcdFile, buffer_5_read, "(port)buffer_5_read");
    sc_trace(mVcdFile, buffer_6_read, "(port)buffer_6_read");
    sc_trace(mVcdFile, buffer_7_read, "(port)buffer_7_read");
    sc_trace(mVcdFile, buffer_8_read, "(port)buffer_8_read");
    sc_trace(mVcdFile, buffer_9_read, "(port)buffer_9_read");
    sc_trace(mVcdFile, buffer_10_read, "(port)buffer_10_read");
    sc_trace(mVcdFile, buffer_11_read, "(port)buffer_11_read");
    sc_trace(mVcdFile, buffer_12_read, "(port)buffer_12_read");
    sc_trace(mVcdFile, buffer_13_read, "(port)buffer_13_read");
    sc_trace(mVcdFile, buffer_14_read, "(port)buffer_14_read");
    sc_trace(mVcdFile, buffer_15_read, "(port)buffer_15_read");
    sc_trace(mVcdFile, buffer_16_read, "(port)buffer_16_read");
    sc_trace(mVcdFile, buffer_17_read, "(port)buffer_17_read");
    sc_trace(mVcdFile, buffer_18_read, "(port)buffer_18_read");
    sc_trace(mVcdFile, buffer_19_read, "(port)buffer_19_read");
    sc_trace(mVcdFile, buffer_20_read, "(port)buffer_20_read");
    sc_trace(mVcdFile, buffer_21_read, "(port)buffer_21_read");
    sc_trace(mVcdFile, buffer_22_read, "(port)buffer_22_read");
    sc_trace(mVcdFile, buffer_23_read, "(port)buffer_23_read");
    sc_trace(mVcdFile, buffer_24_read, "(port)buffer_24_read");
    sc_trace(mVcdFile, in_data_address0, "(port)in_data_address0");
    sc_trace(mVcdFile, in_data_ce0, "(port)in_data_ce0");
    sc_trace(mVcdFile, in_data_q0, "(port)in_data_q0");
    sc_trace(mVcdFile, index_row_out, "(port)index_row_out");
    sc_trace(mVcdFile, kernel_size_row, "(port)kernel_size_row");
    sc_trace(mVcdFile, kernel_size_col, "(port)kernel_size_col");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_return_4, "(port)ap_return_4");
    sc_trace(mVcdFile, ap_return_5, "(port)ap_return_5");
    sc_trace(mVcdFile, ap_return_6, "(port)ap_return_6");
    sc_trace(mVcdFile, ap_return_7, "(port)ap_return_7");
    sc_trace(mVcdFile, ap_return_8, "(port)ap_return_8");
    sc_trace(mVcdFile, ap_return_9, "(port)ap_return_9");
    sc_trace(mVcdFile, ap_return_10, "(port)ap_return_10");
    sc_trace(mVcdFile, ap_return_11, "(port)ap_return_11");
    sc_trace(mVcdFile, ap_return_12, "(port)ap_return_12");
    sc_trace(mVcdFile, ap_return_13, "(port)ap_return_13");
    sc_trace(mVcdFile, ap_return_14, "(port)ap_return_14");
    sc_trace(mVcdFile, ap_return_15, "(port)ap_return_15");
    sc_trace(mVcdFile, ap_return_16, "(port)ap_return_16");
    sc_trace(mVcdFile, ap_return_17, "(port)ap_return_17");
    sc_trace(mVcdFile, ap_return_18, "(port)ap_return_18");
    sc_trace(mVcdFile, ap_return_19, "(port)ap_return_19");
    sc_trace(mVcdFile, ap_return_20, "(port)ap_return_20");
    sc_trace(mVcdFile, ap_return_21, "(port)ap_return_21");
    sc_trace(mVcdFile, ap_return_22, "(port)ap_return_22");
    sc_trace(mVcdFile, ap_return_23, "(port)ap_return_23");
    sc_trace(mVcdFile, ap_return_24, "(port)ap_return_24");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_533, "indvar_flatten_reg_533");
    sc_trace(mVcdFile, i_buffer_reg_544, "i_buffer_reg_544");
    sc_trace(mVcdFile, ik_row_reg_555, "ik_row_reg_555");
    sc_trace(mVcdFile, i_buffer_1_reg_566, "i_buffer_1_reg_566");
    sc_trace(mVcdFile, ik_col_reg_577, "ik_col_reg_577");
    sc_trace(mVcdFile, smax_cast_fu_606_p1, "smax_cast_fu_606_p1");
    sc_trace(mVcdFile, smax_cast_reg_2037, "smax_cast_reg_2037");
    sc_trace(mVcdFile, bound_fu_618_p2, "bound_fu_618_p2");
    sc_trace(mVcdFile, bound_reg_2042, "bound_reg_2042");
    sc_trace(mVcdFile, exitcond_flatten_fu_758_p2, "exitcond_flatten_fu_758_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_2047, "exitcond_flatten_reg_2047");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, indvar_flatten_next_fu_763_p2, "indvar_flatten_next_fu_763_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_15_mid2_v_v_v_fu_796_p3, "tmp_15_mid2_v_v_v_fu_796_p3");
    sc_trace(mVcdFile, tmp_15_mid2_v_v_v_reg_2056, "tmp_15_mid2_v_v_v_reg_2056");
    sc_trace(mVcdFile, tmp_21_fu_809_p1, "tmp_21_fu_809_p1");
    sc_trace(mVcdFile, tmp_21_reg_2061, "tmp_21_reg_2061");
    sc_trace(mVcdFile, i_buffer_mid2_fu_813_p3, "i_buffer_mid2_fu_813_p3");
    sc_trace(mVcdFile, tmp_22_fu_821_p1, "tmp_22_fu_821_p1");
    sc_trace(mVcdFile, tmp_22_reg_2071, "tmp_22_reg_2071");
    sc_trace(mVcdFile, tmp_18_fu_825_p2, "tmp_18_fu_825_p2");
    sc_trace(mVcdFile, tmp_23_fu_831_p1, "tmp_23_fu_831_p1");
    sc_trace(mVcdFile, tmp_23_reg_2081, "tmp_23_reg_2081");
    sc_trace(mVcdFile, tmp_23_reg_2081_pp0_iter1_reg, "tmp_23_reg_2081_pp0_iter1_reg");
    sc_trace(mVcdFile, ik_col_2_fu_835_p2, "ik_col_2_fu_835_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_phi_mux_ik_row_phi_fu_559_p4, "ap_phi_mux_ik_row_phi_fu_559_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_17_cast_fu_841_p1, "tmp_17_cast_fu_841_p1");
    sc_trace(mVcdFile, buffer24_1_fu_152, "buffer24_1_fu_152");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, write_flag_1_fu_156, "write_flag_1_fu_156");
    sc_trace(mVcdFile, write_flag78_1_fu_160, "write_flag78_1_fu_160");
    sc_trace(mVcdFile, buffer23_1_fu_164, "buffer23_1_fu_164");
    sc_trace(mVcdFile, buffer_1_fu_168, "buffer_1_fu_168");
    sc_trace(mVcdFile, write_flag75_1_fu_172, "write_flag75_1_fu_172");
    sc_trace(mVcdFile, buffer22_1_fu_176, "buffer22_1_fu_176");
    sc_trace(mVcdFile, write_flag4_1_fu_180, "write_flag4_1_fu_180");
    sc_trace(mVcdFile, write_flag72_1_fu_184, "write_flag72_1_fu_184");
    sc_trace(mVcdFile, buffer21_1_fu_188, "buffer21_1_fu_188");
    sc_trace(mVcdFile, buffer16_1_fu_192, "buffer16_1_fu_192");
    sc_trace(mVcdFile, write_flag69_1_fu_196, "write_flag69_1_fu_196");
    sc_trace(mVcdFile, buffer20_1_fu_200, "buffer20_1_fu_200");
    sc_trace(mVcdFile, write_flag8_1_fu_204, "write_flag8_1_fu_204");
    sc_trace(mVcdFile, write_flag66_1_fu_208, "write_flag66_1_fu_208");
    sc_trace(mVcdFile, buffer19_1_fu_212, "buffer19_1_fu_212");
    sc_trace(mVcdFile, buffer2_1_fu_216, "buffer2_1_fu_216");
    sc_trace(mVcdFile, write_flag63_1_fu_220, "write_flag63_1_fu_220");
    sc_trace(mVcdFile, buffer18_1_fu_224, "buffer18_1_fu_224");
    sc_trace(mVcdFile, write_flag11_1_fu_228, "write_flag11_1_fu_228");
    sc_trace(mVcdFile, write_flag60_1_fu_232, "write_flag60_1_fu_232");
    sc_trace(mVcdFile, buffer17_1_fu_236, "buffer17_1_fu_236");
    sc_trace(mVcdFile, buffer3_1_fu_240, "buffer3_1_fu_240");
    sc_trace(mVcdFile, write_flag57_1_fu_244, "write_flag57_1_fu_244");
    sc_trace(mVcdFile, buffer1655_1_fu_248, "buffer1655_1_fu_248");
    sc_trace(mVcdFile, write_flag14_1_fu_252, "write_flag14_1_fu_252");
    sc_trace(mVcdFile, write_flag53_1_fu_256, "write_flag53_1_fu_256");
    sc_trace(mVcdFile, buffer1550_1_fu_260, "buffer1550_1_fu_260");
    sc_trace(mVcdFile, buffer4_1_fu_264, "buffer4_1_fu_264");
    sc_trace(mVcdFile, write_flag48_1_fu_268, "write_flag48_1_fu_268");
    sc_trace(mVcdFile, buffer14_1_fu_272, "buffer14_1_fu_272");
    sc_trace(mVcdFile, write_flag17_1_fu_276, "write_flag17_1_fu_276");
    sc_trace(mVcdFile, write_flag44_1_fu_280, "write_flag44_1_fu_280");
    sc_trace(mVcdFile, buffer13_1_fu_284, "buffer13_1_fu_284");
    sc_trace(mVcdFile, buffer5_1_fu_288, "buffer5_1_fu_288");
    sc_trace(mVcdFile, write_flag41_1_fu_292, "write_flag41_1_fu_292");
    sc_trace(mVcdFile, buffer12_1_fu_296, "buffer12_1_fu_296");
    sc_trace(mVcdFile, write_flag20_1_fu_300, "write_flag20_1_fu_300");
    sc_trace(mVcdFile, write_flag38_1_fu_304, "write_flag38_1_fu_304");
    sc_trace(mVcdFile, buffer11_1_fu_308, "buffer11_1_fu_308");
    sc_trace(mVcdFile, buffer6_1_fu_312, "buffer6_1_fu_312");
    sc_trace(mVcdFile, write_flag35_1_fu_316, "write_flag35_1_fu_316");
    sc_trace(mVcdFile, buffer10_1_fu_320, "buffer10_1_fu_320");
    sc_trace(mVcdFile, write_flag23_1_fu_324, "write_flag23_1_fu_324");
    sc_trace(mVcdFile, write_flag32_1_fu_328, "write_flag32_1_fu_328");
    sc_trace(mVcdFile, buffer9_1_fu_332, "buffer9_1_fu_332");
    sc_trace(mVcdFile, buffer7_1_fu_336, "buffer7_1_fu_336");
    sc_trace(mVcdFile, write_flag29_1_fu_340, "write_flag29_1_fu_340");
    sc_trace(mVcdFile, buffer8_1_fu_344, "buffer8_1_fu_344");
    sc_trace(mVcdFile, write_flag26_1_fu_348, "write_flag26_1_fu_348");
    sc_trace(mVcdFile, tmp_fu_588_p2, "tmp_fu_588_p2");
    sc_trace(mVcdFile, tmp_19_fu_594_p1, "tmp_19_fu_594_p1");
    sc_trace(mVcdFile, smax_fu_598_p3, "smax_fu_598_p3");
    sc_trace(mVcdFile, bound_fu_618_p0, "bound_fu_618_p0");
    sc_trace(mVcdFile, bound_fu_618_p1, "bound_fu_618_p1");
    sc_trace(mVcdFile, ik_col_cast_fu_749_p1, "ik_col_cast_fu_749_p1");
    sc_trace(mVcdFile, tmp_s_fu_753_p2, "tmp_s_fu_753_p2");
    sc_trace(mVcdFile, i_buffer_2_dup_fu_775_p2, "i_buffer_2_dup_fu_775_p2");
    sc_trace(mVcdFile, ik_row_2_fu_769_p2, "ik_row_2_fu_769_p2");
    sc_trace(mVcdFile, tmp_20_fu_804_p2, "tmp_20_fu_804_p2");
    sc_trace(mVcdFile, ik_col_mid2_fu_788_p3, "ik_col_mid2_fu_788_p3");
    sc_trace(mVcdFile, i_buffer_1_mid2_fu_780_p3, "i_buffer_1_mid2_fu_780_p3");
    sc_trace(mVcdFile, grp_fu_1570_p3, "grp_fu_1570_p3");
    sc_trace(mVcdFile, buffer_0_write_assi_fu_1245_p3, "buffer_0_write_assi_fu_1245_p3");
    sc_trace(mVcdFile, buffer_1_write_assi_fu_1252_p3, "buffer_1_write_assi_fu_1252_p3");
    sc_trace(mVcdFile, buffer_2_write_assi_fu_1259_p3, "buffer_2_write_assi_fu_1259_p3");
    sc_trace(mVcdFile, buffer_3_write_assi_fu_1266_p3, "buffer_3_write_assi_fu_1266_p3");
    sc_trace(mVcdFile, buffer_4_write_assi_fu_1273_p3, "buffer_4_write_assi_fu_1273_p3");
    sc_trace(mVcdFile, buffer_5_write_assi_fu_1280_p3, "buffer_5_write_assi_fu_1280_p3");
    sc_trace(mVcdFile, buffer_6_write_assi_fu_1287_p3, "buffer_6_write_assi_fu_1287_p3");
    sc_trace(mVcdFile, buffer_7_write_assi_fu_1294_p3, "buffer_7_write_assi_fu_1294_p3");
    sc_trace(mVcdFile, buffer_8_write_assi_fu_1301_p3, "buffer_8_write_assi_fu_1301_p3");
    sc_trace(mVcdFile, buffer_9_write_assi_fu_1308_p3, "buffer_9_write_assi_fu_1308_p3");
    sc_trace(mVcdFile, buffer_10_write_ass_fu_1315_p3, "buffer_10_write_ass_fu_1315_p3");
    sc_trace(mVcdFile, buffer_11_write_ass_fu_1322_p3, "buffer_11_write_ass_fu_1322_p3");
    sc_trace(mVcdFile, buffer_12_write_ass_fu_1329_p3, "buffer_12_write_ass_fu_1329_p3");
    sc_trace(mVcdFile, buffer_13_write_ass_fu_1336_p3, "buffer_13_write_ass_fu_1336_p3");
    sc_trace(mVcdFile, buffer_14_write_ass_fu_1343_p3, "buffer_14_write_ass_fu_1343_p3");
    sc_trace(mVcdFile, buffer_15_write_ass_fu_1350_p3, "buffer_15_write_ass_fu_1350_p3");
    sc_trace(mVcdFile, buffer_16_write_ass_fu_1357_p3, "buffer_16_write_ass_fu_1357_p3");
    sc_trace(mVcdFile, buffer_17_write_ass_fu_1364_p3, "buffer_17_write_ass_fu_1364_p3");
    sc_trace(mVcdFile, buffer_18_write_ass_fu_1371_p3, "buffer_18_write_ass_fu_1371_p3");
    sc_trace(mVcdFile, buffer_19_write_ass_fu_1378_p3, "buffer_19_write_ass_fu_1378_p3");
    sc_trace(mVcdFile, buffer_20_write_ass_fu_1385_p3, "buffer_20_write_ass_fu_1385_p3");
    sc_trace(mVcdFile, buffer_21_write_ass_fu_1392_p3, "buffer_21_write_ass_fu_1392_p3");
    sc_trace(mVcdFile, buffer_22_write_ass_fu_1399_p3, "buffer_22_write_ass_fu_1399_p3");
    sc_trace(mVcdFile, buffer_23_write_ass_fu_1406_p3, "buffer_23_write_ass_fu_1406_p3");
    sc_trace(mVcdFile, buffer_24_write_ass_fu_1413_p3, "buffer_24_write_ass_fu_1413_p3");
    sc_trace(mVcdFile, grp_fu_1570_p0, "grp_fu_1570_p0");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, bound_fu_618_p00, "bound_fu_618_p00");
    sc_trace(mVcdFile, bound_fu_618_p10, "bound_fu_618_p10");
#endif

    }
}

initializeBuffer::~initializeBuffer() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete conv2D_mac_muladdbkb_U1;
}

void initializeBuffer::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_758_p2.read(), ap_const_lv1_0))) {
        i_buffer_1_reg_566 = tmp_18_fu_825_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_buffer_1_reg_566 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_758_p2.read(), ap_const_lv1_0))) {
        i_buffer_reg_544 = i_buffer_mid2_fu_813_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_buffer_reg_544 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_758_p2.read(), ap_const_lv1_0))) {
        ik_col_reg_577 = ik_col_2_fu_835_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        ik_col_reg_577 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_2047.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ik_row_reg_555 = tmp_15_mid2_v_v_v_reg_2056.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        ik_row_reg_555 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_758_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_533 = indvar_flatten_next_fu_763_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_533 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_3))) {
        write_flag11_1_fu_228 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag11_1_fu_228 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_4))) {
        write_flag14_1_fu_252 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag14_1_fu_252 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_5))) {
        write_flag17_1_fu_276 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag17_1_fu_276 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_6))) {
        write_flag20_1_fu_300 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag20_1_fu_300 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_7))) {
        write_flag23_1_fu_324 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag23_1_fu_324 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_8))) {
        write_flag26_1_fu_348 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag26_1_fu_348 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_9))) {
        write_flag29_1_fu_340 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag29_1_fu_340 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_A))) {
        write_flag32_1_fu_328 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag32_1_fu_328 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_B))) {
        write_flag35_1_fu_316 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag35_1_fu_316 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_C))) {
        write_flag38_1_fu_304 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag38_1_fu_304 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_D))) {
        write_flag41_1_fu_292 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag41_1_fu_292 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_E))) {
        write_flag44_1_fu_280 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag44_1_fu_280 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_F))) {
        write_flag48_1_fu_268 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag48_1_fu_268 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_1))) {
        write_flag4_1_fu_180 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag4_1_fu_180 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_10))) {
        write_flag53_1_fu_256 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag53_1_fu_256 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_11))) {
        write_flag57_1_fu_244 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag57_1_fu_244 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_12))) {
        write_flag60_1_fu_232 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag60_1_fu_232 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_13))) {
        write_flag63_1_fu_220 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag63_1_fu_220 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_14))) {
        write_flag66_1_fu_208 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag66_1_fu_208 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_15))) {
        write_flag69_1_fu_196 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag69_1_fu_196 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_16))) {
        write_flag72_1_fu_184 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag72_1_fu_184 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_17))) {
        write_flag75_1_fu_172 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag75_1_fu_172 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         (((((((esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_1F) || 
                esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_1E)) || 
               esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_1D)) || 
              esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_1C)) || 
             esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_1B)) || 
            esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_1A)) || 
           esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_19)) || 
          esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_18)))) {
        write_flag78_1_fu_160 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag78_1_fu_160 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_2))) {
        write_flag8_1_fu_204 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag8_1_fu_204 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_0))) {
        write_flag_1_fu_156 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        write_flag_1_fu_156 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bound_reg_2042 = bound_fu_618_p2.read();
        smax_cast_reg_2037 = smax_cast_fu_606_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_A))) {
        buffer10_1_fu_320 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_B))) {
        buffer11_1_fu_308 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_C))) {
        buffer12_1_fu_296 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_D))) {
        buffer13_1_fu_284 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_E))) {
        buffer14_1_fu_272 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_F))) {
        buffer1550_1_fu_260 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_10))) {
        buffer1655_1_fu_248 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_1))) {
        buffer16_1_fu_192 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_11))) {
        buffer17_1_fu_236 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_12))) {
        buffer18_1_fu_224 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_13))) {
        buffer19_1_fu_212 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_14))) {
        buffer20_1_fu_200 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_15))) {
        buffer21_1_fu_188 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_16))) {
        buffer22_1_fu_176 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_17))) {
        buffer23_1_fu_164 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && (((((((esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_1F) || 
        esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_1E)) || 
       esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_1D)) || 
      esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_1C)) || 
     esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_1B)) || 
    esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_1A)) || 
   esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_19)) || 
  esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_18)))) {
        buffer24_1_fu_152 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_2))) {
        buffer2_1_fu_216 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_3))) {
        buffer3_1_fu_240 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_4))) {
        buffer4_1_fu_264 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_5))) {
        buffer5_1_fu_288 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_6))) {
        buffer6_1_fu_312 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_7))) {
        buffer7_1_fu_336 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_8))) {
        buffer8_1_fu_344 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_9))) {
        buffer9_1_fu_332 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,5,5>(tmp_23_reg_2081_pp0_iter1_reg.read(), ap_const_lv5_0))) {
        buffer_1_fu_168 = in_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_2047 = exitcond_flatten_fu_758_p2.read();
        tmp_23_reg_2081_pp0_iter1_reg = tmp_23_reg_2081.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_758_p2.read(), ap_const_lv1_0))) {
        tmp_15_mid2_v_v_v_reg_2056 = tmp_15_mid2_v_v_v_fu_796_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_758_p2.read(), ap_const_lv1_0))) {
        tmp_21_reg_2061 = tmp_21_fu_809_p1.read();
        tmp_22_reg_2071 = tmp_22_fu_821_p1.read();
        tmp_23_reg_2081 = tmp_23_fu_831_p1.read();
    }
}

void initializeBuffer::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void initializeBuffer::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void initializeBuffer::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[2];
}

void initializeBuffer::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void initializeBuffer::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void initializeBuffer::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void initializeBuffer::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void initializeBuffer::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void initializeBuffer::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void initializeBuffer::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_758_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void initializeBuffer::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void initializeBuffer::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void initializeBuffer::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void initializeBuffer::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void initializeBuffer::thread_ap_phi_mux_ik_row_phi_fu_559_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_2047.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_ik_row_phi_fu_559_p4 = tmp_15_mid2_v_v_v_reg_2056.read();
    } else {
        ap_phi_mux_ik_row_phi_fu_559_p4 = ik_row_reg_555.read();
    }
}

void initializeBuffer::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void initializeBuffer::thread_ap_return_0() {
    ap_return_0 = buffer_0_write_assi_fu_1245_p3.read();
}

void initializeBuffer::thread_ap_return_1() {
    ap_return_1 = buffer_1_write_assi_fu_1252_p3.read();
}

void initializeBuffer::thread_ap_return_10() {
    ap_return_10 = buffer_10_write_ass_fu_1315_p3.read();
}

void initializeBuffer::thread_ap_return_11() {
    ap_return_11 = buffer_11_write_ass_fu_1322_p3.read();
}

void initializeBuffer::thread_ap_return_12() {
    ap_return_12 = buffer_12_write_ass_fu_1329_p3.read();
}

void initializeBuffer::thread_ap_return_13() {
    ap_return_13 = buffer_13_write_ass_fu_1336_p3.read();
}

void initializeBuffer::thread_ap_return_14() {
    ap_return_14 = buffer_14_write_ass_fu_1343_p3.read();
}

void initializeBuffer::thread_ap_return_15() {
    ap_return_15 = buffer_15_write_ass_fu_1350_p3.read();
}

void initializeBuffer::thread_ap_return_16() {
    ap_return_16 = buffer_16_write_ass_fu_1357_p3.read();
}

void initializeBuffer::thread_ap_return_17() {
    ap_return_17 = buffer_17_write_ass_fu_1364_p3.read();
}

void initializeBuffer::thread_ap_return_18() {
    ap_return_18 = buffer_18_write_ass_fu_1371_p3.read();
}

void initializeBuffer::thread_ap_return_19() {
    ap_return_19 = buffer_19_write_ass_fu_1378_p3.read();
}

void initializeBuffer::thread_ap_return_2() {
    ap_return_2 = buffer_2_write_assi_fu_1259_p3.read();
}

void initializeBuffer::thread_ap_return_20() {
    ap_return_20 = buffer_20_write_ass_fu_1385_p3.read();
}

void initializeBuffer::thread_ap_return_21() {
    ap_return_21 = buffer_21_write_ass_fu_1392_p3.read();
}

void initializeBuffer::thread_ap_return_22() {
    ap_return_22 = buffer_22_write_ass_fu_1399_p3.read();
}

void initializeBuffer::thread_ap_return_23() {
    ap_return_23 = buffer_23_write_ass_fu_1406_p3.read();
}

void initializeBuffer::thread_ap_return_24() {
    ap_return_24 = buffer_24_write_ass_fu_1413_p3.read();
}

void initializeBuffer::thread_ap_return_3() {
    ap_return_3 = buffer_3_write_assi_fu_1266_p3.read();
}

void initializeBuffer::thread_ap_return_4() {
    ap_return_4 = buffer_4_write_assi_fu_1273_p3.read();
}

void initializeBuffer::thread_ap_return_5() {
    ap_return_5 = buffer_5_write_assi_fu_1280_p3.read();
}

void initializeBuffer::thread_ap_return_6() {
    ap_return_6 = buffer_6_write_assi_fu_1287_p3.read();
}

void initializeBuffer::thread_ap_return_7() {
    ap_return_7 = buffer_7_write_assi_fu_1294_p3.read();
}

void initializeBuffer::thread_ap_return_8() {
    ap_return_8 = buffer_8_write_assi_fu_1301_p3.read();
}

void initializeBuffer::thread_ap_return_9() {
    ap_return_9 = buffer_9_write_assi_fu_1308_p3.read();
}

void initializeBuffer::thread_bound_fu_618_p0() {
    bound_fu_618_p0 =  (sc_lv<32>) (bound_fu_618_p00.read());
}

void initializeBuffer::thread_bound_fu_618_p00() {
    bound_fu_618_p00 = esl_zext<64,32>(kernel_size_col.read());
}

void initializeBuffer::thread_bound_fu_618_p1() {
    bound_fu_618_p1 =  (sc_lv<32>) (bound_fu_618_p10.read());
}

void initializeBuffer::thread_bound_fu_618_p10() {
    bound_fu_618_p10 = esl_zext<64,32>(kernel_size_row.read());
}

void initializeBuffer::thread_bound_fu_618_p2() {
    bound_fu_618_p2 = (!bound_fu_618_p0.read().is_01() || !bound_fu_618_p1.read().is_01())? sc_lv<64>(): sc_biguint<32>(bound_fu_618_p0.read()) * sc_biguint<32>(bound_fu_618_p1.read());
}

void initializeBuffer::thread_buffer_0_write_assi_fu_1245_p3() {
    buffer_0_write_assi_fu_1245_p3 = (!write_flag_1_fu_156.read()[0].is_01())? sc_lv<32>(): ((write_flag_1_fu_156.read()[0].to_bool())? buffer_1_fu_168.read(): buffer_0_read.read());
}

void initializeBuffer::thread_buffer_10_write_ass_fu_1315_p3() {
    buffer_10_write_ass_fu_1315_p3 = (!write_flag32_1_fu_328.read()[0].is_01())? sc_lv<32>(): ((write_flag32_1_fu_328.read()[0].to_bool())? buffer10_1_fu_320.read(): buffer_10_read.read());
}

void initializeBuffer::thread_buffer_11_write_ass_fu_1322_p3() {
    buffer_11_write_ass_fu_1322_p3 = (!write_flag35_1_fu_316.read()[0].is_01())? sc_lv<32>(): ((write_flag35_1_fu_316.read()[0].to_bool())? buffer11_1_fu_308.read(): buffer_11_read.read());
}

void initializeBuffer::thread_buffer_12_write_ass_fu_1329_p3() {
    buffer_12_write_ass_fu_1329_p3 = (!write_flag38_1_fu_304.read()[0].is_01())? sc_lv<32>(): ((write_flag38_1_fu_304.read()[0].to_bool())? buffer12_1_fu_296.read(): buffer_12_read.read());
}

void initializeBuffer::thread_buffer_13_write_ass_fu_1336_p3() {
    buffer_13_write_ass_fu_1336_p3 = (!write_flag41_1_fu_292.read()[0].is_01())? sc_lv<32>(): ((write_flag41_1_fu_292.read()[0].to_bool())? buffer13_1_fu_284.read(): buffer_13_read.read());
}

void initializeBuffer::thread_buffer_14_write_ass_fu_1343_p3() {
    buffer_14_write_ass_fu_1343_p3 = (!write_flag44_1_fu_280.read()[0].is_01())? sc_lv<32>(): ((write_flag44_1_fu_280.read()[0].to_bool())? buffer14_1_fu_272.read(): buffer_14_read.read());
}

void initializeBuffer::thread_buffer_15_write_ass_fu_1350_p3() {
    buffer_15_write_ass_fu_1350_p3 = (!write_flag48_1_fu_268.read()[0].is_01())? sc_lv<32>(): ((write_flag48_1_fu_268.read()[0].to_bool())? buffer1550_1_fu_260.read(): buffer_15_read.read());
}

void initializeBuffer::thread_buffer_16_write_ass_fu_1357_p3() {
    buffer_16_write_ass_fu_1357_p3 = (!write_flag53_1_fu_256.read()[0].is_01())? sc_lv<32>(): ((write_flag53_1_fu_256.read()[0].to_bool())? buffer1655_1_fu_248.read(): buffer_16_read.read());
}

void initializeBuffer::thread_buffer_17_write_ass_fu_1364_p3() {
    buffer_17_write_ass_fu_1364_p3 = (!write_flag57_1_fu_244.read()[0].is_01())? sc_lv<32>(): ((write_flag57_1_fu_244.read()[0].to_bool())? buffer17_1_fu_236.read(): buffer_17_read.read());
}

void initializeBuffer::thread_buffer_18_write_ass_fu_1371_p3() {
    buffer_18_write_ass_fu_1371_p3 = (!write_flag60_1_fu_232.read()[0].is_01())? sc_lv<32>(): ((write_flag60_1_fu_232.read()[0].to_bool())? buffer18_1_fu_224.read(): buffer_18_read.read());
}

void initializeBuffer::thread_buffer_19_write_ass_fu_1378_p3() {
    buffer_19_write_ass_fu_1378_p3 = (!write_flag63_1_fu_220.read()[0].is_01())? sc_lv<32>(): ((write_flag63_1_fu_220.read()[0].to_bool())? buffer19_1_fu_212.read(): buffer_19_read.read());
}

void initializeBuffer::thread_buffer_1_write_assi_fu_1252_p3() {
    buffer_1_write_assi_fu_1252_p3 = (!write_flag4_1_fu_180.read()[0].is_01())? sc_lv<32>(): ((write_flag4_1_fu_180.read()[0].to_bool())? buffer16_1_fu_192.read(): buffer_1_read.read());
}

void initializeBuffer::thread_buffer_20_write_ass_fu_1385_p3() {
    buffer_20_write_ass_fu_1385_p3 = (!write_flag66_1_fu_208.read()[0].is_01())? sc_lv<32>(): ((write_flag66_1_fu_208.read()[0].to_bool())? buffer20_1_fu_200.read(): buffer_20_read.read());
}

void initializeBuffer::thread_buffer_21_write_ass_fu_1392_p3() {
    buffer_21_write_ass_fu_1392_p3 = (!write_flag69_1_fu_196.read()[0].is_01())? sc_lv<32>(): ((write_flag69_1_fu_196.read()[0].to_bool())? buffer21_1_fu_188.read(): buffer_21_read.read());
}

void initializeBuffer::thread_buffer_22_write_ass_fu_1399_p3() {
    buffer_22_write_ass_fu_1399_p3 = (!write_flag72_1_fu_184.read()[0].is_01())? sc_lv<32>(): ((write_flag72_1_fu_184.read()[0].to_bool())? buffer22_1_fu_176.read(): buffer_22_read.read());
}

void initializeBuffer::thread_buffer_23_write_ass_fu_1406_p3() {
    buffer_23_write_ass_fu_1406_p3 = (!write_flag75_1_fu_172.read()[0].is_01())? sc_lv<32>(): ((write_flag75_1_fu_172.read()[0].to_bool())? buffer23_1_fu_164.read(): buffer_23_read.read());
}

void initializeBuffer::thread_buffer_24_write_ass_fu_1413_p3() {
    buffer_24_write_ass_fu_1413_p3 = (!write_flag78_1_fu_160.read()[0].is_01())? sc_lv<32>(): ((write_flag78_1_fu_160.read()[0].to_bool())? buffer24_1_fu_152.read(): buffer_24_read.read());
}

void initializeBuffer::thread_buffer_2_write_assi_fu_1259_p3() {
    buffer_2_write_assi_fu_1259_p3 = (!write_flag8_1_fu_204.read()[0].is_01())? sc_lv<32>(): ((write_flag8_1_fu_204.read()[0].to_bool())? buffer2_1_fu_216.read(): buffer_2_read.read());
}

void initializeBuffer::thread_buffer_3_write_assi_fu_1266_p3() {
    buffer_3_write_assi_fu_1266_p3 = (!write_flag11_1_fu_228.read()[0].is_01())? sc_lv<32>(): ((write_flag11_1_fu_228.read()[0].to_bool())? buffer3_1_fu_240.read(): buffer_3_read.read());
}

void initializeBuffer::thread_buffer_4_write_assi_fu_1273_p3() {
    buffer_4_write_assi_fu_1273_p3 = (!write_flag14_1_fu_252.read()[0].is_01())? sc_lv<32>(): ((write_flag14_1_fu_252.read()[0].to_bool())? buffer4_1_fu_264.read(): buffer_4_read.read());
}

void initializeBuffer::thread_buffer_5_write_assi_fu_1280_p3() {
    buffer_5_write_assi_fu_1280_p3 = (!write_flag17_1_fu_276.read()[0].is_01())? sc_lv<32>(): ((write_flag17_1_fu_276.read()[0].to_bool())? buffer5_1_fu_288.read(): buffer_5_read.read());
}

void initializeBuffer::thread_buffer_6_write_assi_fu_1287_p3() {
    buffer_6_write_assi_fu_1287_p3 = (!write_flag20_1_fu_300.read()[0].is_01())? sc_lv<32>(): ((write_flag20_1_fu_300.read()[0].to_bool())? buffer6_1_fu_312.read(): buffer_6_read.read());
}

void initializeBuffer::thread_buffer_7_write_assi_fu_1294_p3() {
    buffer_7_write_assi_fu_1294_p3 = (!write_flag23_1_fu_324.read()[0].is_01())? sc_lv<32>(): ((write_flag23_1_fu_324.read()[0].to_bool())? buffer7_1_fu_336.read(): buffer_7_read.read());
}

void initializeBuffer::thread_buffer_8_write_assi_fu_1301_p3() {
    buffer_8_write_assi_fu_1301_p3 = (!write_flag26_1_fu_348.read()[0].is_01())? sc_lv<32>(): ((write_flag26_1_fu_348.read()[0].to_bool())? buffer8_1_fu_344.read(): buffer_8_read.read());
}

void initializeBuffer::thread_buffer_9_write_assi_fu_1308_p3() {
    buffer_9_write_assi_fu_1308_p3 = (!write_flag29_1_fu_340.read()[0].is_01())? sc_lv<32>(): ((write_flag29_1_fu_340.read()[0].to_bool())? buffer9_1_fu_332.read(): buffer_9_read.read());
}

void initializeBuffer::thread_exitcond_flatten_fu_758_p2() {
    exitcond_flatten_fu_758_p2 = (!indvar_flatten_reg_533.read().is_01() || !bound_reg_2042.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_533.read() == bound_reg_2042.read());
}

void initializeBuffer::thread_grp_fu_1570_p0() {
    grp_fu_1570_p0 =  (sc_lv<8>) (ap_const_lv15_64);
}

void initializeBuffer::thread_i_buffer_1_mid2_fu_780_p3() {
    i_buffer_1_mid2_fu_780_p3 = (!tmp_s_fu_753_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_s_fu_753_p2.read()[0].to_bool())? i_buffer_1_reg_566.read(): i_buffer_2_dup_fu_775_p2.read());
}

void initializeBuffer::thread_i_buffer_2_dup_fu_775_p2() {
    i_buffer_2_dup_fu_775_p2 = (!i_buffer_reg_544.read().is_01() || !smax_cast_reg_2037.read().is_01())? sc_lv<32>(): (sc_biguint<32>(i_buffer_reg_544.read()) + sc_biguint<32>(smax_cast_reg_2037.read()));
}

void initializeBuffer::thread_i_buffer_mid2_fu_813_p3() {
    i_buffer_mid2_fu_813_p3 = (!tmp_s_fu_753_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_s_fu_753_p2.read()[0].to_bool())? i_buffer_reg_544.read(): i_buffer_2_dup_fu_775_p2.read());
}

void initializeBuffer::thread_ik_col_2_fu_835_p2() {
    ik_col_2_fu_835_p2 = (!ik_col_mid2_fu_788_p3.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(ik_col_mid2_fu_788_p3.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void initializeBuffer::thread_ik_col_cast_fu_749_p1() {
    ik_col_cast_fu_749_p1 = esl_zext<32,31>(ik_col_reg_577.read());
}

void initializeBuffer::thread_ik_col_mid2_fu_788_p3() {
    ik_col_mid2_fu_788_p3 = (!tmp_s_fu_753_p2.read()[0].is_01())? sc_lv<31>(): ((tmp_s_fu_753_p2.read()[0].to_bool())? ik_col_reg_577.read(): ap_const_lv31_0);
}

void initializeBuffer::thread_ik_row_2_fu_769_p2() {
    ik_row_2_fu_769_p2 = (!ap_const_lv31_1.is_01() || !ap_phi_mux_ik_row_phi_fu_559_p4.read().is_01())? sc_lv<31>(): (sc_biguint<31>(ap_const_lv31_1) + sc_biguint<31>(ap_phi_mux_ik_row_phi_fu_559_p4.read()));
}

void initializeBuffer::thread_in_data_address0() {
    in_data_address0 =  (sc_lv<14>) (tmp_17_cast_fu_841_p1.read());
}

void initializeBuffer::thread_in_data_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        in_data_ce0 = ap_const_logic_1;
    } else {
        in_data_ce0 = ap_const_logic_0;
    }
}

void initializeBuffer::thread_indvar_flatten_next_fu_763_p2() {
    indvar_flatten_next_fu_763_p2 = (!indvar_flatten_reg_533.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(indvar_flatten_reg_533.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void initializeBuffer::thread_smax_cast_fu_606_p1() {
    smax_cast_fu_606_p1 = esl_zext<32,31>(smax_fu_598_p3.read());
}

void initializeBuffer::thread_smax_fu_598_p3() {
    smax_fu_598_p3 = (!tmp_fu_588_p2.read()[0].is_01())? sc_lv<31>(): ((tmp_fu_588_p2.read()[0].to_bool())? tmp_19_fu_594_p1.read(): ap_const_lv31_0);
}

void initializeBuffer::thread_tmp_15_mid2_v_v_v_fu_796_p3() {
    tmp_15_mid2_v_v_v_fu_796_p3 = (!tmp_s_fu_753_p2.read()[0].is_01())? sc_lv<31>(): ((tmp_s_fu_753_p2.read()[0].to_bool())? ap_phi_mux_ik_row_phi_fu_559_p4.read(): ik_row_2_fu_769_p2.read());
}

void initializeBuffer::thread_tmp_17_cast_fu_841_p1() {
    tmp_17_cast_fu_841_p1 = esl_sext<64,15>(grp_fu_1570_p3.read());
}

void initializeBuffer::thread_tmp_18_fu_825_p2() {
    tmp_18_fu_825_p2 = (!ap_const_lv32_1.is_01() || !i_buffer_1_mid2_fu_780_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(i_buffer_1_mid2_fu_780_p3.read()));
}

void initializeBuffer::thread_tmp_19_fu_594_p1() {
    tmp_19_fu_594_p1 = kernel_size_col.read().range(31-1, 0);
}

void initializeBuffer::thread_tmp_20_fu_804_p2() {
    tmp_20_fu_804_p2 = (!tmp_15_mid2_v_v_v_fu_796_p3.read().is_01() || !index_row_out.read().is_01())? sc_lv<31>(): (sc_biguint<31>(tmp_15_mid2_v_v_v_fu_796_p3.read()) + sc_biguint<31>(index_row_out.read()));
}

void initializeBuffer::thread_tmp_21_fu_809_p1() {
    tmp_21_fu_809_p1 = tmp_20_fu_804_p2.read().range(15-1, 0);
}

void initializeBuffer::thread_tmp_22_fu_821_p1() {
    tmp_22_fu_821_p1 = ik_col_mid2_fu_788_p3.read().range(15-1, 0);
}

void initializeBuffer::thread_tmp_23_fu_831_p1() {
    tmp_23_fu_831_p1 = i_buffer_1_mid2_fu_780_p3.read().range(5-1, 0);
}

void initializeBuffer::thread_tmp_fu_588_p2() {
    tmp_fu_588_p2 = (!kernel_size_col.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(kernel_size_col.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void initializeBuffer::thread_tmp_s_fu_753_p2() {
    tmp_s_fu_753_p2 = (!ik_col_cast_fu_749_p1.read().is_01() || !kernel_size_col.read().is_01())? sc_lv<1>(): (sc_bigint<32>(ik_col_cast_fu_749_p1.read()) < sc_bigint<32>(kernel_size_col.read()));
}

void initializeBuffer::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_758_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_758_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

