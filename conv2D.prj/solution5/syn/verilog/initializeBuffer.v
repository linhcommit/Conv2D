// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module initializeBuffer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        buffer_0_read,
        buffer_1_read,
        buffer_2_read,
        buffer_3_read,
        buffer_4_read,
        buffer_5_read,
        buffer_6_read,
        buffer_7_read,
        buffer_8_read,
        buffer_9_read,
        buffer_10_read,
        buffer_11_read,
        buffer_12_read,
        buffer_13_read,
        buffer_14_read,
        buffer_15_read,
        buffer_16_read,
        buffer_17_read,
        buffer_18_read,
        buffer_19_read,
        buffer_20_read,
        buffer_21_read,
        buffer_22_read,
        buffer_23_read,
        buffer_24_read,
        in_data_address0,
        in_data_ce0,
        in_data_q0,
        index_row_out,
        kernel_size_row,
        kernel_size_col,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state5 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] buffer_0_read;
input  [31:0] buffer_1_read;
input  [31:0] buffer_2_read;
input  [31:0] buffer_3_read;
input  [31:0] buffer_4_read;
input  [31:0] buffer_5_read;
input  [31:0] buffer_6_read;
input  [31:0] buffer_7_read;
input  [31:0] buffer_8_read;
input  [31:0] buffer_9_read;
input  [31:0] buffer_10_read;
input  [31:0] buffer_11_read;
input  [31:0] buffer_12_read;
input  [31:0] buffer_13_read;
input  [31:0] buffer_14_read;
input  [31:0] buffer_15_read;
input  [31:0] buffer_16_read;
input  [31:0] buffer_17_read;
input  [31:0] buffer_18_read;
input  [31:0] buffer_19_read;
input  [31:0] buffer_20_read;
input  [31:0] buffer_21_read;
input  [31:0] buffer_22_read;
input  [31:0] buffer_23_read;
input  [31:0] buffer_24_read;
output  [13:0] in_data_address0;
output   in_data_ce0;
input  [31:0] in_data_q0;
input  [30:0] index_row_out;
input  [31:0] kernel_size_row;
input  [31:0] kernel_size_col;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] ap_return_8;
output  [31:0] ap_return_9;
output  [31:0] ap_return_10;
output  [31:0] ap_return_11;
output  [31:0] ap_return_12;
output  [31:0] ap_return_13;
output  [31:0] ap_return_14;
output  [31:0] ap_return_15;
output  [31:0] ap_return_16;
output  [31:0] ap_return_17;
output  [31:0] ap_return_18;
output  [31:0] ap_return_19;
output  [31:0] ap_return_20;
output  [31:0] ap_return_21;
output  [31:0] ap_return_22;
output  [31:0] ap_return_23;
output  [31:0] ap_return_24;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_data_ce0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] indvar_flatten_reg_533;
reg   [31:0] i_buffer_reg_544;
reg   [30:0] ik_row_reg_555;
reg   [31:0] i_buffer_1_reg_566;
reg   [30:0] ik_col_reg_577;
wire   [31:0] smax_cast_fu_606_p1;
reg   [31:0] smax_cast_reg_2037;
wire   [63:0] bound_fu_618_p2;
reg   [63:0] bound_reg_2042;
wire   [0:0] exitcond_flatten_fu_758_p2;
reg   [0:0] exitcond_flatten_reg_2047;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] indvar_flatten_next_fu_763_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [30:0] tmp_15_mid2_v_v_v_fu_796_p3;
reg   [30:0] tmp_15_mid2_v_v_v_reg_2056;
wire  signed [14:0] tmp_21_fu_809_p1;
reg  signed [14:0] tmp_21_reg_2061;
wire   [31:0] i_buffer_mid2_fu_813_p3;
wire   [14:0] tmp_22_fu_821_p1;
reg   [14:0] tmp_22_reg_2071;
wire   [31:0] tmp_18_fu_825_p2;
wire   [4:0] tmp_23_fu_831_p1;
reg   [4:0] tmp_23_reg_2081;
reg   [4:0] tmp_23_reg_2081_pp0_iter1_reg;
wire   [30:0] ik_col_2_fu_835_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg   [30:0] ap_phi_mux_ik_row_phi_fu_559_p4;
wire    ap_block_pp0_stage0;
wire  signed [63:0] tmp_17_cast_fu_841_p1;
reg   [31:0] buffer24_1_fu_152;
wire    ap_CS_fsm_state5;
reg   [0:0] write_flag_1_fu_156;
reg   [0:0] write_flag78_1_fu_160;
reg   [31:0] buffer23_1_fu_164;
reg   [31:0] buffer_1_fu_168;
reg   [0:0] write_flag75_1_fu_172;
reg   [31:0] buffer22_1_fu_176;
reg   [0:0] write_flag4_1_fu_180;
reg   [0:0] write_flag72_1_fu_184;
reg   [31:0] buffer21_1_fu_188;
reg   [31:0] buffer16_1_fu_192;
reg   [0:0] write_flag69_1_fu_196;
reg   [31:0] buffer20_1_fu_200;
reg   [0:0] write_flag8_1_fu_204;
reg   [0:0] write_flag66_1_fu_208;
reg   [31:0] buffer19_1_fu_212;
reg   [31:0] buffer2_1_fu_216;
reg   [0:0] write_flag63_1_fu_220;
reg   [31:0] buffer18_1_fu_224;
reg   [0:0] write_flag11_1_fu_228;
reg   [0:0] write_flag60_1_fu_232;
reg   [31:0] buffer17_1_fu_236;
reg   [31:0] buffer3_1_fu_240;
reg   [0:0] write_flag57_1_fu_244;
reg   [31:0] buffer1655_1_fu_248;
reg   [0:0] write_flag14_1_fu_252;
reg   [0:0] write_flag53_1_fu_256;
reg   [31:0] buffer1550_1_fu_260;
reg   [31:0] buffer4_1_fu_264;
reg   [0:0] write_flag48_1_fu_268;
reg   [31:0] buffer14_1_fu_272;
reg   [0:0] write_flag17_1_fu_276;
reg   [0:0] write_flag44_1_fu_280;
reg   [31:0] buffer13_1_fu_284;
reg   [31:0] buffer5_1_fu_288;
reg   [0:0] write_flag41_1_fu_292;
reg   [31:0] buffer12_1_fu_296;
reg   [0:0] write_flag20_1_fu_300;
reg   [0:0] write_flag38_1_fu_304;
reg   [31:0] buffer11_1_fu_308;
reg   [31:0] buffer6_1_fu_312;
reg   [0:0] write_flag35_1_fu_316;
reg   [31:0] buffer10_1_fu_320;
reg   [0:0] write_flag23_1_fu_324;
reg   [0:0] write_flag32_1_fu_328;
reg   [31:0] buffer9_1_fu_332;
reg   [31:0] buffer7_1_fu_336;
reg   [0:0] write_flag29_1_fu_340;
reg   [31:0] buffer8_1_fu_344;
reg   [0:0] write_flag26_1_fu_348;
wire   [0:0] tmp_fu_588_p2;
wire   [30:0] tmp_19_fu_594_p1;
wire   [30:0] smax_fu_598_p3;
wire   [31:0] bound_fu_618_p0;
wire   [31:0] bound_fu_618_p1;
wire   [31:0] ik_col_cast_fu_749_p1;
wire   [0:0] tmp_s_fu_753_p2;
wire   [31:0] i_buffer_2_dup_fu_775_p2;
wire   [30:0] ik_row_2_fu_769_p2;
wire   [30:0] tmp_20_fu_804_p2;
wire   [30:0] ik_col_mid2_fu_788_p3;
wire   [31:0] i_buffer_1_mid2_fu_780_p3;
wire  signed [14:0] grp_fu_1570_p3;
wire   [31:0] buffer_0_write_assi_fu_1245_p3;
wire   [31:0] buffer_1_write_assi_fu_1252_p3;
wire   [31:0] buffer_2_write_assi_fu_1259_p3;
wire   [31:0] buffer_3_write_assi_fu_1266_p3;
wire   [31:0] buffer_4_write_assi_fu_1273_p3;
wire   [31:0] buffer_5_write_assi_fu_1280_p3;
wire   [31:0] buffer_6_write_assi_fu_1287_p3;
wire   [31:0] buffer_7_write_assi_fu_1294_p3;
wire   [31:0] buffer_8_write_assi_fu_1301_p3;
wire   [31:0] buffer_9_write_assi_fu_1308_p3;
wire   [31:0] buffer_10_write_ass_fu_1315_p3;
wire   [31:0] buffer_11_write_ass_fu_1322_p3;
wire   [31:0] buffer_12_write_ass_fu_1329_p3;
wire   [31:0] buffer_13_write_ass_fu_1336_p3;
wire   [31:0] buffer_14_write_ass_fu_1343_p3;
wire   [31:0] buffer_15_write_ass_fu_1350_p3;
wire   [31:0] buffer_16_write_ass_fu_1357_p3;
wire   [31:0] buffer_17_write_ass_fu_1364_p3;
wire   [31:0] buffer_18_write_ass_fu_1371_p3;
wire   [31:0] buffer_19_write_ass_fu_1378_p3;
wire   [31:0] buffer_20_write_ass_fu_1385_p3;
wire   [31:0] buffer_21_write_ass_fu_1392_p3;
wire   [31:0] buffer_22_write_ass_fu_1399_p3;
wire   [31:0] buffer_23_write_ass_fu_1406_p3;
wire   [31:0] buffer_24_write_ass_fu_1413_p3;
wire   [7:0] grp_fu_1570_p0;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [63:0] bound_fu_618_p00;
wire   [63:0] bound_fu_618_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

conv2D_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 15 ))
conv2D_mac_muladdbkb_U1(
    .din0(grp_fu_1570_p0),
    .din1(tmp_21_reg_2061),
    .din2(tmp_22_reg_2071),
    .dout(grp_fu_1570_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_758_p2 == 1'd0))) begin
        i_buffer_1_reg_566 <= tmp_18_fu_825_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_buffer_1_reg_566 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_758_p2 == 1'd0))) begin
        i_buffer_reg_544 <= i_buffer_mid2_fu_813_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_buffer_reg_544 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_758_p2 == 1'd0))) begin
        ik_col_reg_577 <= ik_col_2_fu_835_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ik_col_reg_577 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_2047 == 1'd0))) begin
        ik_row_reg_555 <= tmp_15_mid2_v_v_v_reg_2056;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ik_row_reg_555 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_758_p2 == 1'd0))) begin
        indvar_flatten_reg_533 <= indvar_flatten_next_fu_763_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_533 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag11_1_fu_228 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag11_1_fu_228 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag14_1_fu_252 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag14_1_fu_252 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd5) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag17_1_fu_276 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag17_1_fu_276 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd6) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag20_1_fu_300 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag20_1_fu_300 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd7) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag23_1_fu_324 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag23_1_fu_324 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd8) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag26_1_fu_348 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag26_1_fu_348 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd9) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag29_1_fu_340 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag29_1_fu_340 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd10) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag32_1_fu_328 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag32_1_fu_328 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd11) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag35_1_fu_316 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag35_1_fu_316 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd12) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag38_1_fu_304 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag38_1_fu_304 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd13) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag41_1_fu_292 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag41_1_fu_292 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd14) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag44_1_fu_280 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag44_1_fu_280 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd15) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag48_1_fu_268 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag48_1_fu_268 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag4_1_fu_180 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag4_1_fu_180 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd16) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag53_1_fu_256 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag53_1_fu_256 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd17) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag57_1_fu_244 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag57_1_fu_244 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd18) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag60_1_fu_232 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag60_1_fu_232 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd19) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag63_1_fu_220 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag63_1_fu_220 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd20) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag66_1_fu_208 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag66_1_fu_208 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd21) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag69_1_fu_196 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag69_1_fu_196 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd22) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag72_1_fu_184 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag72_1_fu_184 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd23) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag75_1_fu_172 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag75_1_fu_172 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & ((tmp_23_reg_2081_pp0_iter1_reg == 5'd24) | ((tmp_23_reg_2081_pp0_iter1_reg == 5'd25) | ((tmp_23_reg_2081_pp0_iter1_reg == 5'd26) | ((tmp_23_reg_2081_pp0_iter1_reg == 5'd27) | ((tmp_23_reg_2081_pp0_iter1_reg == 5'd28) | ((tmp_23_reg_2081_pp0_iter1_reg == 5'd29) | ((tmp_23_reg_2081_pp0_iter1_reg == 5'd30) | (tmp_23_reg_2081_pp0_iter1_reg == 5'd31)))))))))) begin
        write_flag78_1_fu_160 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag78_1_fu_160 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag8_1_fu_204 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag8_1_fu_204 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        write_flag_1_fu_156 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag_1_fu_156 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        bound_reg_2042 <= bound_fu_618_p2;
        smax_cast_reg_2037[30 : 0] <= smax_cast_fu_606_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd10) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer10_1_fu_320 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd11) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer11_1_fu_308 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd12) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer12_1_fu_296 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd13) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer13_1_fu_284 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd14) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer14_1_fu_272 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd15) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer1550_1_fu_260 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd16) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer1655_1_fu_248 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer16_1_fu_192 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd17) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer17_1_fu_236 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd18) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer18_1_fu_224 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd19) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer19_1_fu_212 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd20) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer20_1_fu_200 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd21) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer21_1_fu_188 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd22) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer22_1_fu_176 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd23) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer23_1_fu_164 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & ((tmp_23_reg_2081_pp0_iter1_reg == 5'd24) | ((tmp_23_reg_2081_pp0_iter1_reg == 5'd25) | ((tmp_23_reg_2081_pp0_iter1_reg == 5'd26) | ((tmp_23_reg_2081_pp0_iter1_reg == 5'd27) | ((tmp_23_reg_2081_pp0_iter1_reg == 5'd28) | ((tmp_23_reg_2081_pp0_iter1_reg == 5'd29) | ((tmp_23_reg_2081_pp0_iter1_reg == 5'd30) | (tmp_23_reg_2081_pp0_iter1_reg == 5'd31)))))))))) begin
        buffer24_1_fu_152 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer2_1_fu_216 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer3_1_fu_240 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer4_1_fu_264 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd5) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer5_1_fu_288 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd6) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer6_1_fu_312 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd7) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer7_1_fu_336 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd8) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer8_1_fu_344 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd9) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer9_1_fu_332 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_23_reg_2081_pp0_iter1_reg == 5'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer_1_fu_168 <= in_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_reg_2047 <= exitcond_flatten_fu_758_p2;
        tmp_23_reg_2081_pp0_iter1_reg <= tmp_23_reg_2081;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_758_p2 == 1'd0))) begin
        tmp_15_mid2_v_v_v_reg_2056 <= tmp_15_mid2_v_v_v_fu_796_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_758_p2 == 1'd0))) begin
        tmp_21_reg_2061 <= tmp_21_fu_809_p1;
        tmp_22_reg_2071 <= tmp_22_fu_821_p1;
        tmp_23_reg_2081 <= tmp_23_fu_831_p1;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_758_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_2047 == 1'd0))) begin
        ap_phi_mux_ik_row_phi_fu_559_p4 = tmp_15_mid2_v_v_v_reg_2056;
    end else begin
        ap_phi_mux_ik_row_phi_fu_559_p4 = ik_row_reg_555;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_data_ce0 = 1'b1;
    end else begin
        in_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_fu_758_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_fu_758_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = buffer_0_write_assi_fu_1245_p3;

assign ap_return_1 = buffer_1_write_assi_fu_1252_p3;

assign ap_return_10 = buffer_10_write_ass_fu_1315_p3;

assign ap_return_11 = buffer_11_write_ass_fu_1322_p3;

assign ap_return_12 = buffer_12_write_ass_fu_1329_p3;

assign ap_return_13 = buffer_13_write_ass_fu_1336_p3;

assign ap_return_14 = buffer_14_write_ass_fu_1343_p3;

assign ap_return_15 = buffer_15_write_ass_fu_1350_p3;

assign ap_return_16 = buffer_16_write_ass_fu_1357_p3;

assign ap_return_17 = buffer_17_write_ass_fu_1364_p3;

assign ap_return_18 = buffer_18_write_ass_fu_1371_p3;

assign ap_return_19 = buffer_19_write_ass_fu_1378_p3;

assign ap_return_2 = buffer_2_write_assi_fu_1259_p3;

assign ap_return_20 = buffer_20_write_ass_fu_1385_p3;

assign ap_return_21 = buffer_21_write_ass_fu_1392_p3;

assign ap_return_22 = buffer_22_write_ass_fu_1399_p3;

assign ap_return_23 = buffer_23_write_ass_fu_1406_p3;

assign ap_return_24 = buffer_24_write_ass_fu_1413_p3;

assign ap_return_3 = buffer_3_write_assi_fu_1266_p3;

assign ap_return_4 = buffer_4_write_assi_fu_1273_p3;

assign ap_return_5 = buffer_5_write_assi_fu_1280_p3;

assign ap_return_6 = buffer_6_write_assi_fu_1287_p3;

assign ap_return_7 = buffer_7_write_assi_fu_1294_p3;

assign ap_return_8 = buffer_8_write_assi_fu_1301_p3;

assign ap_return_9 = buffer_9_write_assi_fu_1308_p3;

assign bound_fu_618_p0 = bound_fu_618_p00;

assign bound_fu_618_p00 = kernel_size_col;

assign bound_fu_618_p1 = bound_fu_618_p10;

assign bound_fu_618_p10 = kernel_size_row;

assign bound_fu_618_p2 = (bound_fu_618_p0 * bound_fu_618_p1);

assign buffer_0_write_assi_fu_1245_p3 = ((write_flag_1_fu_156[0:0] === 1'b1) ? buffer_1_fu_168 : buffer_0_read);

assign buffer_10_write_ass_fu_1315_p3 = ((write_flag32_1_fu_328[0:0] === 1'b1) ? buffer10_1_fu_320 : buffer_10_read);

assign buffer_11_write_ass_fu_1322_p3 = ((write_flag35_1_fu_316[0:0] === 1'b1) ? buffer11_1_fu_308 : buffer_11_read);

assign buffer_12_write_ass_fu_1329_p3 = ((write_flag38_1_fu_304[0:0] === 1'b1) ? buffer12_1_fu_296 : buffer_12_read);

assign buffer_13_write_ass_fu_1336_p3 = ((write_flag41_1_fu_292[0:0] === 1'b1) ? buffer13_1_fu_284 : buffer_13_read);

assign buffer_14_write_ass_fu_1343_p3 = ((write_flag44_1_fu_280[0:0] === 1'b1) ? buffer14_1_fu_272 : buffer_14_read);

assign buffer_15_write_ass_fu_1350_p3 = ((write_flag48_1_fu_268[0:0] === 1'b1) ? buffer1550_1_fu_260 : buffer_15_read);

assign buffer_16_write_ass_fu_1357_p3 = ((write_flag53_1_fu_256[0:0] === 1'b1) ? buffer1655_1_fu_248 : buffer_16_read);

assign buffer_17_write_ass_fu_1364_p3 = ((write_flag57_1_fu_244[0:0] === 1'b1) ? buffer17_1_fu_236 : buffer_17_read);

assign buffer_18_write_ass_fu_1371_p3 = ((write_flag60_1_fu_232[0:0] === 1'b1) ? buffer18_1_fu_224 : buffer_18_read);

assign buffer_19_write_ass_fu_1378_p3 = ((write_flag63_1_fu_220[0:0] === 1'b1) ? buffer19_1_fu_212 : buffer_19_read);

assign buffer_1_write_assi_fu_1252_p3 = ((write_flag4_1_fu_180[0:0] === 1'b1) ? buffer16_1_fu_192 : buffer_1_read);

assign buffer_20_write_ass_fu_1385_p3 = ((write_flag66_1_fu_208[0:0] === 1'b1) ? buffer20_1_fu_200 : buffer_20_read);

assign buffer_21_write_ass_fu_1392_p3 = ((write_flag69_1_fu_196[0:0] === 1'b1) ? buffer21_1_fu_188 : buffer_21_read);

assign buffer_22_write_ass_fu_1399_p3 = ((write_flag72_1_fu_184[0:0] === 1'b1) ? buffer22_1_fu_176 : buffer_22_read);

assign buffer_23_write_ass_fu_1406_p3 = ((write_flag75_1_fu_172[0:0] === 1'b1) ? buffer23_1_fu_164 : buffer_23_read);

assign buffer_24_write_ass_fu_1413_p3 = ((write_flag78_1_fu_160[0:0] === 1'b1) ? buffer24_1_fu_152 : buffer_24_read);

assign buffer_2_write_assi_fu_1259_p3 = ((write_flag8_1_fu_204[0:0] === 1'b1) ? buffer2_1_fu_216 : buffer_2_read);

assign buffer_3_write_assi_fu_1266_p3 = ((write_flag11_1_fu_228[0:0] === 1'b1) ? buffer3_1_fu_240 : buffer_3_read);

assign buffer_4_write_assi_fu_1273_p3 = ((write_flag14_1_fu_252[0:0] === 1'b1) ? buffer4_1_fu_264 : buffer_4_read);

assign buffer_5_write_assi_fu_1280_p3 = ((write_flag17_1_fu_276[0:0] === 1'b1) ? buffer5_1_fu_288 : buffer_5_read);

assign buffer_6_write_assi_fu_1287_p3 = ((write_flag20_1_fu_300[0:0] === 1'b1) ? buffer6_1_fu_312 : buffer_6_read);

assign buffer_7_write_assi_fu_1294_p3 = ((write_flag23_1_fu_324[0:0] === 1'b1) ? buffer7_1_fu_336 : buffer_7_read);

assign buffer_8_write_assi_fu_1301_p3 = ((write_flag26_1_fu_348[0:0] === 1'b1) ? buffer8_1_fu_344 : buffer_8_read);

assign buffer_9_write_assi_fu_1308_p3 = ((write_flag29_1_fu_340[0:0] === 1'b1) ? buffer9_1_fu_332 : buffer_9_read);

assign exitcond_flatten_fu_758_p2 = ((indvar_flatten_reg_533 == bound_reg_2042) ? 1'b1 : 1'b0);

assign grp_fu_1570_p0 = 15'd100;

assign i_buffer_1_mid2_fu_780_p3 = ((tmp_s_fu_753_p2[0:0] === 1'b1) ? i_buffer_1_reg_566 : i_buffer_2_dup_fu_775_p2);

assign i_buffer_2_dup_fu_775_p2 = (i_buffer_reg_544 + smax_cast_reg_2037);

assign i_buffer_mid2_fu_813_p3 = ((tmp_s_fu_753_p2[0:0] === 1'b1) ? i_buffer_reg_544 : i_buffer_2_dup_fu_775_p2);

assign ik_col_2_fu_835_p2 = (ik_col_mid2_fu_788_p3 + 31'd1);

assign ik_col_cast_fu_749_p1 = ik_col_reg_577;

assign ik_col_mid2_fu_788_p3 = ((tmp_s_fu_753_p2[0:0] === 1'b1) ? ik_col_reg_577 : 31'd0);

assign ik_row_2_fu_769_p2 = (31'd1 + ap_phi_mux_ik_row_phi_fu_559_p4);

assign in_data_address0 = tmp_17_cast_fu_841_p1;

assign indvar_flatten_next_fu_763_p2 = (indvar_flatten_reg_533 + 64'd1);

assign smax_cast_fu_606_p1 = smax_fu_598_p3;

assign smax_fu_598_p3 = ((tmp_fu_588_p2[0:0] === 1'b1) ? tmp_19_fu_594_p1 : 31'd0);

assign tmp_15_mid2_v_v_v_fu_796_p3 = ((tmp_s_fu_753_p2[0:0] === 1'b1) ? ap_phi_mux_ik_row_phi_fu_559_p4 : ik_row_2_fu_769_p2);

assign tmp_17_cast_fu_841_p1 = grp_fu_1570_p3;

assign tmp_18_fu_825_p2 = (32'd1 + i_buffer_1_mid2_fu_780_p3);

assign tmp_19_fu_594_p1 = kernel_size_col[30:0];

assign tmp_20_fu_804_p2 = (tmp_15_mid2_v_v_v_fu_796_p3 + index_row_out);

assign tmp_21_fu_809_p1 = tmp_20_fu_804_p2[14:0];

assign tmp_22_fu_821_p1 = ik_col_mid2_fu_788_p3[14:0];

assign tmp_23_fu_831_p1 = i_buffer_1_mid2_fu_780_p3[4:0];

assign tmp_fu_588_p2 = (($signed(kernel_size_col) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_s_fu_753_p2 = (($signed(ik_col_cast_fu_749_p1) < $signed(kernel_size_col)) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    smax_cast_reg_2037[31] <= 1'b0;
end

endmodule //initializeBuffer
