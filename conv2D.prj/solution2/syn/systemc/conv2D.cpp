// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "conv2D.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic conv2D::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic conv2D::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> conv2D::ap_ST_fsm_state1 = "1";
const sc_lv<11> conv2D::ap_ST_fsm_state2 = "10";
const sc_lv<11> conv2D::ap_ST_fsm_state3 = "100";
const sc_lv<11> conv2D::ap_ST_fsm_state4 = "1000";
const sc_lv<11> conv2D::ap_ST_fsm_state5 = "10000";
const sc_lv<11> conv2D::ap_ST_fsm_state6 = "100000";
const sc_lv<11> conv2D::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> conv2D::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> conv2D::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> conv2D::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> conv2D::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> conv2D::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> conv2D::ap_const_lv32_1 = "1";
const sc_lv<32> conv2D::ap_const_lv32_2 = "10";
const sc_lv<32> conv2D::ap_const_lv32_3 = "11";
const sc_lv<32> conv2D::ap_const_lv32_6 = "110";
const sc_lv<1> conv2D::ap_const_lv1_0 = "0";
const bool conv2D::ap_const_boolean_0 = false;
const sc_lv<1> conv2D::ap_const_lv1_1 = "1";
const sc_lv<31> conv2D::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<38> conv2D::ap_const_lv38_0 = "00000000000000000000000000000000000000";
const sc_lv<32> conv2D::ap_const_lv32_A = "1010";
const sc_lv<32> conv2D::ap_const_lv32_7 = "111";
const sc_lv<32> conv2D::ap_const_lv32_4 = "100";
const sc_lv<32> conv2D::ap_const_lv32_8 = "1000";
const sc_lv<32> conv2D::ap_const_lv32_5 = "101";
const sc_lv<32> conv2D::ap_const_lv32_9 = "1001";
const sc_lv<38> conv2D::ap_const_lv38_64 = "1100100";
const sc_lv<31> conv2D::ap_const_lv31_1 = "1";
const sc_lv<32> conv2D::ap_const_lv32_1F = "11111";
const sc_lv<32> conv2D::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const bool conv2D::ap_const_boolean_1 = true;

conv2D::conv2D(sc_module_name name) : sc_module(name), mVcdFile(0) {
    buffer_U = new conv2D_buffer("buffer_U");
    buffer_U->clk(ap_clk);
    buffer_U->reset(ap_rst);
    buffer_U->address0(buffer_address0);
    buffer_U->ce0(buffer_ce0);
    buffer_U->we0(buffer_we0);
    buffer_U->d0(buffer_d0);
    buffer_U->q0(buffer_q0);
    grp_calculateConvolution_fu_164 = new calculateConvolution("grp_calculateConvolution_fu_164");
    grp_calculateConvolution_fu_164->ap_clk(ap_clk);
    grp_calculateConvolution_fu_164->ap_rst(ap_rst);
    grp_calculateConvolution_fu_164->ap_start(grp_calculateConvolution_fu_164_ap_start);
    grp_calculateConvolution_fu_164->ap_done(grp_calculateConvolution_fu_164_ap_done);
    grp_calculateConvolution_fu_164->ap_idle(grp_calculateConvolution_fu_164_ap_idle);
    grp_calculateConvolution_fu_164->ap_ready(grp_calculateConvolution_fu_164_ap_ready);
    grp_calculateConvolution_fu_164->buffer_r_address0(grp_calculateConvolution_fu_164_buffer_r_address0);
    grp_calculateConvolution_fu_164->buffer_r_ce0(grp_calculateConvolution_fu_164_buffer_r_ce0);
    grp_calculateConvolution_fu_164->buffer_r_q0(buffer_q0);
    grp_calculateConvolution_fu_164->kernel_address0(grp_calculateConvolution_fu_164_kernel_address0);
    grp_calculateConvolution_fu_164->kernel_ce0(grp_calculateConvolution_fu_164_kernel_ce0);
    grp_calculateConvolution_fu_164->kernel_q0(kernel_q0);
    grp_calculateConvolution_fu_164->kernel_size_row(kernel_size_row);
    grp_calculateConvolution_fu_164->kernel_size_col(kernel_size_col);
    grp_calculateConvolution_fu_164->ap_return(grp_calculateConvolution_fu_164_ap_return);
    grp_updateBuffer_fu_174 = new updateBuffer("grp_updateBuffer_fu_174");
    grp_updateBuffer_fu_174->ap_clk(ap_clk);
    grp_updateBuffer_fu_174->ap_rst(ap_rst);
    grp_updateBuffer_fu_174->ap_start(grp_updateBuffer_fu_174_ap_start);
    grp_updateBuffer_fu_174->ap_done(grp_updateBuffer_fu_174_ap_done);
    grp_updateBuffer_fu_174->ap_idle(grp_updateBuffer_fu_174_ap_idle);
    grp_updateBuffer_fu_174->ap_ready(grp_updateBuffer_fu_174_ap_ready);
    grp_updateBuffer_fu_174->buffer_r_address0(grp_updateBuffer_fu_174_buffer_r_address0);
    grp_updateBuffer_fu_174->buffer_r_ce0(grp_updateBuffer_fu_174_buffer_r_ce0);
    grp_updateBuffer_fu_174->buffer_r_we0(grp_updateBuffer_fu_174_buffer_r_we0);
    grp_updateBuffer_fu_174->buffer_r_d0(grp_updateBuffer_fu_174_buffer_r_d0);
    grp_updateBuffer_fu_174->buffer_r_q0(buffer_q0);
    grp_updateBuffer_fu_174->in_data_address0(grp_updateBuffer_fu_174_in_data_address0);
    grp_updateBuffer_fu_174->in_data_ce0(grp_updateBuffer_fu_174_in_data_ce0);
    grp_updateBuffer_fu_174->in_data_q0(in_data_q0);
    grp_updateBuffer_fu_174->index_row_out(index_row_out_reg_129);
    grp_updateBuffer_fu_174->index_col_out(grp_updateBuffer_fu_174_index_col_out);
    grp_updateBuffer_fu_174->kernel_size_row(kernel_size_row);
    grp_updateBuffer_fu_174->kernel_size_col(kernel_size_col);
    grp_updateBuffer_fu_174->col_in(col_in);
    grp_initializeBuffer_fu_188 = new initializeBuffer("grp_initializeBuffer_fu_188");
    grp_initializeBuffer_fu_188->ap_clk(ap_clk);
    grp_initializeBuffer_fu_188->ap_rst(ap_rst);
    grp_initializeBuffer_fu_188->ap_start(grp_initializeBuffer_fu_188_ap_start);
    grp_initializeBuffer_fu_188->ap_done(grp_initializeBuffer_fu_188_ap_done);
    grp_initializeBuffer_fu_188->ap_idle(grp_initializeBuffer_fu_188_ap_idle);
    grp_initializeBuffer_fu_188->ap_ready(grp_initializeBuffer_fu_188_ap_ready);
    grp_initializeBuffer_fu_188->buffer_r_address0(grp_initializeBuffer_fu_188_buffer_r_address0);
    grp_initializeBuffer_fu_188->buffer_r_ce0(grp_initializeBuffer_fu_188_buffer_r_ce0);
    grp_initializeBuffer_fu_188->buffer_r_we0(grp_initializeBuffer_fu_188_buffer_r_we0);
    grp_initializeBuffer_fu_188->buffer_r_d0(grp_initializeBuffer_fu_188_buffer_r_d0);
    grp_initializeBuffer_fu_188->in_data_address0(grp_initializeBuffer_fu_188_in_data_address0);
    grp_initializeBuffer_fu_188->in_data_ce0(grp_initializeBuffer_fu_188_in_data_ce0);
    grp_initializeBuffer_fu_188->in_data_q0(in_data_q0);
    grp_initializeBuffer_fu_188->index_row_out(index_row_out_reg_129);
    grp_initializeBuffer_fu_188->kernel_size_row(kernel_size_row);
    grp_initializeBuffer_fu_188->kernel_size_col(kernel_size_col);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state7_on_subcall_done);
    sensitive << ( tmp_44_reg_428 );
    sensitive << ( grp_updateBuffer_fu_174_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_19_fu_237_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_19_fu_237_p2 );

    SC_METHOD(thread_buffer_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_44_reg_428 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_calculateConvolution_fu_164_buffer_r_address0 );
    sensitive << ( grp_updateBuffer_fu_174_buffer_r_address0 );
    sensitive << ( grp_initializeBuffer_fu_188_buffer_r_address0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_buffer_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_44_reg_428 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_calculateConvolution_fu_164_buffer_r_ce0 );
    sensitive << ( grp_updateBuffer_fu_174_buffer_r_ce0 );
    sensitive << ( grp_initializeBuffer_fu_188_buffer_r_ce0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_buffer_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_44_reg_428 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_updateBuffer_fu_174_buffer_r_d0 );
    sensitive << ( grp_initializeBuffer_fu_188_buffer_r_d0 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_buffer_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_44_reg_428 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_updateBuffer_fu_174_buffer_r_we0 );
    sensitive << ( grp_initializeBuffer_fu_188_buffer_r_we0 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_calculateConvolution_fu_164_ap_start);
    sensitive << ( grp_calculateConvolution_fu_164_ap_start_reg );

    SC_METHOD(thread_grp_initializeBuffer_fu_188_ap_start);
    sensitive << ( grp_initializeBuffer_fu_188_ap_start_reg );

    SC_METHOD(thread_grp_updateBuffer_fu_174_ap_start);
    sensitive << ( grp_updateBuffer_fu_174_ap_start_reg );

    SC_METHOD(thread_grp_updateBuffer_fu_174_index_col_out);
    sensitive << ( tmp_44_reg_428 );
    sensitive << ( index_col_out_1_s_reg_432 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( index_col_out_reg_152 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_in_data_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_44_reg_428 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_updateBuffer_fu_174_in_data_address0 );
    sensitive << ( grp_initializeBuffer_fu_188_in_data_address0 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_in_data_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_44_reg_428 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_updateBuffer_fu_174_in_data_ce0 );
    sensitive << ( grp_initializeBuffer_fu_188_in_data_ce0 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_index_col_out_1_1_fu_353_p2);
    sensitive << ( index_col_out_reg_152 );

    SC_METHOD(thread_index_col_out_1_s_fu_342_p2);
    sensitive << ( index_col_out_reg_152 );

    SC_METHOD(thread_index_row_out_1_fu_242_p2);
    sensitive << ( index_row_out_reg_129 );

    SC_METHOD(thread_index_row_out_cast_fu_233_p1);
    sensitive << ( index_row_out_reg_129 );

    SC_METHOD(thread_kernel_address0);
    sensitive << ( grp_calculateConvolution_fu_164_kernel_address0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_kernel_ce0);
    sensitive << ( grp_calculateConvolution_fu_164_kernel_ce0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_next_mul_fu_227_p2);
    sensitive << ( phi_mul_reg_141 );

    SC_METHOD(thread_out_data_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_25_cast_fu_337_p1 );
    sensitive << ( tmp_27_cast_fu_367_p1 );

    SC_METHOD(thread_out_data_ce0);
    sensitive << ( grp_calculateConvolution_fu_164_ap_done );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_out_data_d0);
    sensitive << ( grp_calculateConvolution_fu_164_ap_return );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_out_data_we0);
    sensitive << ( grp_calculateConvolution_fu_164_ap_done );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_p_lshr_fu_273_p4);
    sensitive << ( p_neg_fu_268_p2 );

    SC_METHOD(thread_p_neg_fu_268_p2);
    sensitive << ( tmp_18_reg_396 );

    SC_METHOD(thread_p_neg_t_fu_283_p2);
    sensitive << ( p_lshr_fu_273_p4 );

    SC_METHOD(thread_tmp_17_fu_211_p2);
    sensitive << ( col_in );

    SC_METHOD(thread_tmp_18_fu_217_p2);
    sensitive << ( kernel_size_col );
    sensitive << ( tmp_17_fu_211_p2 );

    SC_METHOD(thread_tmp_18_op_op_fu_255_p2);
    sensitive << ( tmp_18_reg_396 );

    SC_METHOD(thread_tmp_19_fu_237_p2);
    sensitive << ( tmp_s_reg_391 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( index_row_out_cast_fu_233_p1 );

    SC_METHOD(thread_tmp_24_fu_332_p2);
    sensitive << ( tmp_37_reg_404 );
    sensitive << ( tmp_45_fu_328_p1 );

    SC_METHOD(thread_tmp_25_1_fu_348_p2);
    sensitive << ( tmp_18_reg_396 );
    sensitive << ( tmp_44_reg_428 );
    sensitive << ( index_col_out_1_s_fu_342_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_block_state7_on_subcall_done );

    SC_METHOD(thread_tmp_25_cast_fu_337_p1);
    sensitive << ( tmp_24_fu_332_p2 );

    SC_METHOD(thread_tmp_26_fu_362_p2);
    sensitive << ( tmp_37_reg_404 );
    sensitive << ( tmp_46_fu_359_p1 );

    SC_METHOD(thread_tmp_27_cast_fu_367_p1);
    sensitive << ( tmp_26_fu_362_p2 );

    SC_METHOD(thread_tmp_37_fu_223_p1);
    sensitive << ( phi_mul_reg_141 );

    SC_METHOD(thread_tmp_38_fu_248_p3);
    sensitive << ( tmp_18_reg_396 );

    SC_METHOD(thread_tmp_39_fu_260_p3);
    sensitive << ( tmp_18_op_op_fu_255_p2 );

    SC_METHOD(thread_tmp_40_fu_289_p4);
    sensitive << ( tmp_18_op_op_fu_255_p2 );

    SC_METHOD(thread_tmp_41_fu_299_p3);
    sensitive << ( tmp_39_fu_260_p3 );
    sensitive << ( p_neg_t_fu_283_p2 );
    sensitive << ( tmp_40_fu_289_p4 );

    SC_METHOD(thread_tmp_42_fu_307_p3);
    sensitive << ( tmp_38_fu_248_p3 );
    sensitive << ( tmp_41_fu_299_p3 );

    SC_METHOD(thread_tmp_43_fu_315_p3);
    sensitive << ( tmp_42_fu_307_p3 );

    SC_METHOD(thread_tmp_44_fu_323_p2);
    sensitive << ( tmp_43_reg_423 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( index_col_out_reg_152 );

    SC_METHOD(thread_tmp_45_fu_328_p1);
    sensitive << ( index_col_out_reg_152 );

    SC_METHOD(thread_tmp_46_fu_359_p1);
    sensitive << ( index_col_out_1_s_reg_432 );

    SC_METHOD(thread_tmp_fu_199_p2);
    sensitive << ( row_in );

    SC_METHOD(thread_tmp_s_fu_205_p2);
    sensitive << ( kernel_size_row );
    sensitive << ( tmp_fu_199_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_initializeBuffer_fu_188_ap_done );
    sensitive << ( tmp_44_fu_323_p2 );
    sensitive << ( tmp_44_reg_428 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_updateBuffer_fu_174_ap_done );
    sensitive << ( ap_block_state7_on_subcall_done );
    sensitive << ( tmp_25_1_fu_348_p2 );
    sensitive << ( grp_calculateConvolution_fu_164_ap_done );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_19_fu_237_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000001";
    grp_calculateConvolution_fu_164_ap_start_reg = SC_LOGIC_0;
    grp_updateBuffer_fu_174_ap_start_reg = SC_LOGIC_0;
    grp_initializeBuffer_fu_188_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "conv2D_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_data_address0, "(port)in_data_address0");
    sc_trace(mVcdFile, in_data_ce0, "(port)in_data_ce0");
    sc_trace(mVcdFile, in_data_q0, "(port)in_data_q0");
    sc_trace(mVcdFile, out_data_address0, "(port)out_data_address0");
    sc_trace(mVcdFile, out_data_ce0, "(port)out_data_ce0");
    sc_trace(mVcdFile, out_data_we0, "(port)out_data_we0");
    sc_trace(mVcdFile, out_data_d0, "(port)out_data_d0");
    sc_trace(mVcdFile, row_in, "(port)row_in");
    sc_trace(mVcdFile, col_in, "(port)col_in");
    sc_trace(mVcdFile, kernel_address0, "(port)kernel_address0");
    sc_trace(mVcdFile, kernel_ce0, "(port)kernel_ce0");
    sc_trace(mVcdFile, kernel_q0, "(port)kernel_q0");
    sc_trace(mVcdFile, kernel_size_row, "(port)kernel_size_row");
    sc_trace(mVcdFile, kernel_size_col, "(port)kernel_size_col");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_s_fu_205_p2, "tmp_s_fu_205_p2");
    sc_trace(mVcdFile, tmp_s_reg_391, "tmp_s_reg_391");
    sc_trace(mVcdFile, tmp_18_fu_217_p2, "tmp_18_fu_217_p2");
    sc_trace(mVcdFile, tmp_18_reg_396, "tmp_18_reg_396");
    sc_trace(mVcdFile, tmp_37_fu_223_p1, "tmp_37_fu_223_p1");
    sc_trace(mVcdFile, tmp_37_reg_404, "tmp_37_reg_404");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, next_mul_fu_227_p2, "next_mul_fu_227_p2");
    sc_trace(mVcdFile, next_mul_reg_410, "next_mul_reg_410");
    sc_trace(mVcdFile, index_row_out_1_fu_242_p2, "index_row_out_1_fu_242_p2");
    sc_trace(mVcdFile, index_row_out_1_reg_418, "index_row_out_1_reg_418");
    sc_trace(mVcdFile, tmp_43_fu_315_p3, "tmp_43_fu_315_p3");
    sc_trace(mVcdFile, tmp_43_reg_423, "tmp_43_reg_423");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_initializeBuffer_fu_188_ap_ready, "grp_initializeBuffer_fu_188_ap_ready");
    sc_trace(mVcdFile, grp_initializeBuffer_fu_188_ap_done, "grp_initializeBuffer_fu_188_ap_done");
    sc_trace(mVcdFile, tmp_44_fu_323_p2, "tmp_44_fu_323_p2");
    sc_trace(mVcdFile, tmp_44_reg_428, "tmp_44_reg_428");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, index_col_out_1_s_fu_342_p2, "index_col_out_1_s_fu_342_p2");
    sc_trace(mVcdFile, index_col_out_1_s_reg_432, "index_col_out_1_s_reg_432");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_updateBuffer_fu_174_ap_ready, "grp_updateBuffer_fu_174_ap_ready");
    sc_trace(mVcdFile, grp_updateBuffer_fu_174_ap_done, "grp_updateBuffer_fu_174_ap_done");
    sc_trace(mVcdFile, ap_block_state7_on_subcall_done, "ap_block_state7_on_subcall_done");
    sc_trace(mVcdFile, index_col_out_1_1_fu_353_p2, "index_col_out_1_1_fu_353_p2");
    sc_trace(mVcdFile, index_col_out_1_1_reg_441, "index_col_out_1_1_reg_441");
    sc_trace(mVcdFile, tmp_25_1_fu_348_p2, "tmp_25_1_fu_348_p2");
    sc_trace(mVcdFile, buffer_address0, "buffer_address0");
    sc_trace(mVcdFile, buffer_ce0, "buffer_ce0");
    sc_trace(mVcdFile, buffer_we0, "buffer_we0");
    sc_trace(mVcdFile, buffer_d0, "buffer_d0");
    sc_trace(mVcdFile, buffer_q0, "buffer_q0");
    sc_trace(mVcdFile, grp_calculateConvolution_fu_164_ap_start, "grp_calculateConvolution_fu_164_ap_start");
    sc_trace(mVcdFile, grp_calculateConvolution_fu_164_ap_done, "grp_calculateConvolution_fu_164_ap_done");
    sc_trace(mVcdFile, grp_calculateConvolution_fu_164_ap_idle, "grp_calculateConvolution_fu_164_ap_idle");
    sc_trace(mVcdFile, grp_calculateConvolution_fu_164_ap_ready, "grp_calculateConvolution_fu_164_ap_ready");
    sc_trace(mVcdFile, grp_calculateConvolution_fu_164_buffer_r_address0, "grp_calculateConvolution_fu_164_buffer_r_address0");
    sc_trace(mVcdFile, grp_calculateConvolution_fu_164_buffer_r_ce0, "grp_calculateConvolution_fu_164_buffer_r_ce0");
    sc_trace(mVcdFile, grp_calculateConvolution_fu_164_kernel_address0, "grp_calculateConvolution_fu_164_kernel_address0");
    sc_trace(mVcdFile, grp_calculateConvolution_fu_164_kernel_ce0, "grp_calculateConvolution_fu_164_kernel_ce0");
    sc_trace(mVcdFile, grp_calculateConvolution_fu_164_ap_return, "grp_calculateConvolution_fu_164_ap_return");
    sc_trace(mVcdFile, grp_updateBuffer_fu_174_ap_start, "grp_updateBuffer_fu_174_ap_start");
    sc_trace(mVcdFile, grp_updateBuffer_fu_174_ap_idle, "grp_updateBuffer_fu_174_ap_idle");
    sc_trace(mVcdFile, grp_updateBuffer_fu_174_buffer_r_address0, "grp_updateBuffer_fu_174_buffer_r_address0");
    sc_trace(mVcdFile, grp_updateBuffer_fu_174_buffer_r_ce0, "grp_updateBuffer_fu_174_buffer_r_ce0");
    sc_trace(mVcdFile, grp_updateBuffer_fu_174_buffer_r_we0, "grp_updateBuffer_fu_174_buffer_r_we0");
    sc_trace(mVcdFile, grp_updateBuffer_fu_174_buffer_r_d0, "grp_updateBuffer_fu_174_buffer_r_d0");
    sc_trace(mVcdFile, grp_updateBuffer_fu_174_in_data_address0, "grp_updateBuffer_fu_174_in_data_address0");
    sc_trace(mVcdFile, grp_updateBuffer_fu_174_in_data_ce0, "grp_updateBuffer_fu_174_in_data_ce0");
    sc_trace(mVcdFile, grp_updateBuffer_fu_174_index_col_out, "grp_updateBuffer_fu_174_index_col_out");
    sc_trace(mVcdFile, grp_initializeBuffer_fu_188_ap_start, "grp_initializeBuffer_fu_188_ap_start");
    sc_trace(mVcdFile, grp_initializeBuffer_fu_188_ap_idle, "grp_initializeBuffer_fu_188_ap_idle");
    sc_trace(mVcdFile, grp_initializeBuffer_fu_188_buffer_r_address0, "grp_initializeBuffer_fu_188_buffer_r_address0");
    sc_trace(mVcdFile, grp_initializeBuffer_fu_188_buffer_r_ce0, "grp_initializeBuffer_fu_188_buffer_r_ce0");
    sc_trace(mVcdFile, grp_initializeBuffer_fu_188_buffer_r_we0, "grp_initializeBuffer_fu_188_buffer_r_we0");
    sc_trace(mVcdFile, grp_initializeBuffer_fu_188_buffer_r_d0, "grp_initializeBuffer_fu_188_buffer_r_d0");
    sc_trace(mVcdFile, grp_initializeBuffer_fu_188_in_data_address0, "grp_initializeBuffer_fu_188_in_data_address0");
    sc_trace(mVcdFile, grp_initializeBuffer_fu_188_in_data_ce0, "grp_initializeBuffer_fu_188_in_data_ce0");
    sc_trace(mVcdFile, index_row_out_reg_129, "index_row_out_reg_129");
    sc_trace(mVcdFile, phi_mul_reg_141, "phi_mul_reg_141");
    sc_trace(mVcdFile, index_col_out_reg_152, "index_col_out_reg_152");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_calculateConvolution_fu_164_ap_start_reg, "grp_calculateConvolution_fu_164_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_updateBuffer_fu_174_ap_start_reg, "grp_updateBuffer_fu_174_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_initializeBuffer_fu_188_ap_start_reg, "grp_initializeBuffer_fu_188_ap_start_reg");
    sc_trace(mVcdFile, tmp_19_fu_237_p2, "tmp_19_fu_237_p2");
    sc_trace(mVcdFile, tmp_25_cast_fu_337_p1, "tmp_25_cast_fu_337_p1");
    sc_trace(mVcdFile, tmp_27_cast_fu_367_p1, "tmp_27_cast_fu_367_p1");
    sc_trace(mVcdFile, tmp_fu_199_p2, "tmp_fu_199_p2");
    sc_trace(mVcdFile, tmp_17_fu_211_p2, "tmp_17_fu_211_p2");
    sc_trace(mVcdFile, index_row_out_cast_fu_233_p1, "index_row_out_cast_fu_233_p1");
    sc_trace(mVcdFile, tmp_18_op_op_fu_255_p2, "tmp_18_op_op_fu_255_p2");
    sc_trace(mVcdFile, p_neg_fu_268_p2, "p_neg_fu_268_p2");
    sc_trace(mVcdFile, p_lshr_fu_273_p4, "p_lshr_fu_273_p4");
    sc_trace(mVcdFile, tmp_39_fu_260_p3, "tmp_39_fu_260_p3");
    sc_trace(mVcdFile, p_neg_t_fu_283_p2, "p_neg_t_fu_283_p2");
    sc_trace(mVcdFile, tmp_40_fu_289_p4, "tmp_40_fu_289_p4");
    sc_trace(mVcdFile, tmp_38_fu_248_p3, "tmp_38_fu_248_p3");
    sc_trace(mVcdFile, tmp_41_fu_299_p3, "tmp_41_fu_299_p3");
    sc_trace(mVcdFile, tmp_42_fu_307_p3, "tmp_42_fu_307_p3");
    sc_trace(mVcdFile, tmp_45_fu_328_p1, "tmp_45_fu_328_p1");
    sc_trace(mVcdFile, tmp_24_fu_332_p2, "tmp_24_fu_332_p2");
    sc_trace(mVcdFile, tmp_46_fu_359_p1, "tmp_46_fu_359_p1");
    sc_trace(mVcdFile, tmp_26_fu_362_p2, "tmp_26_fu_362_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("conv2D.hdltvin.dat");
    mHdltvoutHandle.open("conv2D.hdltvout.dat");
}

conv2D::~conv2D() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete buffer_U;
    delete grp_calculateConvolution_fu_164;
    delete grp_updateBuffer_fu_174;
    delete grp_initializeBuffer_fu_188;
}

void conv2D::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_calculateConvolution_fu_164_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
              esl_seteq<1,1,1>(tmp_44_fu_323_p2.read(), ap_const_lv1_0)) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
            grp_calculateConvolution_fu_164_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_calculateConvolution_fu_164_ap_ready.read())) {
            grp_calculateConvolution_fu_164_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_initializeBuffer_fu_188_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_19_fu_237_p2.read()))) {
            grp_initializeBuffer_fu_188_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_initializeBuffer_fu_188_ap_ready.read())) {
            grp_initializeBuffer_fu_188_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_updateBuffer_fu_174_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
            grp_updateBuffer_fu_174_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_updateBuffer_fu_174_ap_ready.read())) {
            grp_updateBuffer_fu_174_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(grp_updateBuffer_fu_174_ap_done.read(), ap_const_logic_1))) {
        index_col_out_reg_152 = index_col_out_1_1_reg_441.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(grp_initializeBuffer_fu_188_ap_done.read(), ap_const_logic_1))) {
        index_col_out_reg_152 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_block_state7_on_subcall_done.read(), ap_const_boolean_0) && 
         (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_25_1_fu_348_p2.read()) || 
          esl_seteq<1,1,1>(tmp_44_reg_428.read(), ap_const_lv1_1)))) {
        index_row_out_reg_129 = index_row_out_1_reg_418.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        index_row_out_reg_129 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_block_state7_on_subcall_done.read(), ap_const_boolean_0) && 
         (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_25_1_fu_348_p2.read()) || 
          esl_seteq<1,1,1>(tmp_44_reg_428.read(), ap_const_lv1_1)))) {
        phi_mul_reg_141 = next_mul_reg_410.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_141 = ap_const_lv38_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(tmp_44_reg_428.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_state7_on_subcall_done.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_25_1_fu_348_p2.read(), ap_const_lv1_1))) {
        index_col_out_1_1_reg_441 = index_col_out_1_1_fu_353_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(tmp_44_reg_428.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_state7_on_subcall_done.read(), ap_const_boolean_0))) {
        index_col_out_1_s_reg_432 = index_col_out_1_s_fu_342_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        index_row_out_1_reg_418 = index_row_out_1_fu_242_p2.read();
        next_mul_reg_410 = next_mul_fu_227_p2.read();
        tmp_37_reg_404 = tmp_37_fu_223_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_18_reg_396 = tmp_18_fu_217_p2.read();
        tmp_s_reg_391 = tmp_s_fu_205_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_initializeBuffer_fu_188_ap_done.read(), ap_const_logic_1))) {
        tmp_43_reg_423 = tmp_43_fu_315_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_44_reg_428 = tmp_44_fu_323_p2.read();
    }
}

void conv2D::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void conv2D::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void conv2D::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void conv2D::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void conv2D::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void conv2D::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void conv2D::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void conv2D::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void conv2D::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void conv2D::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void conv2D::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void conv2D::thread_ap_block_state7_on_subcall_done() {
    ap_block_state7_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_updateBuffer_fu_174_ap_done.read()) && esl_seteq<1,1,1>(tmp_44_reg_428.read(), ap_const_lv1_0));
}

void conv2D::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_fu_237_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void conv2D::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void conv2D::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_fu_237_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void conv2D::thread_buffer_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        buffer_address0 = grp_initializeBuffer_fu_188_buffer_r_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                 esl_seteq<1,1,1>(tmp_44_reg_428.read(), ap_const_lv1_0)))) {
        buffer_address0 = grp_updateBuffer_fu_174_buffer_r_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        buffer_address0 = grp_calculateConvolution_fu_164_buffer_r_address0.read();
    } else {
        buffer_address0 = "XXXXX";
    }
}

void conv2D::thread_buffer_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        buffer_ce0 = grp_initializeBuffer_fu_188_buffer_r_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                 esl_seteq<1,1,1>(tmp_44_reg_428.read(), ap_const_lv1_0)))) {
        buffer_ce0 = grp_updateBuffer_fu_174_buffer_r_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        buffer_ce0 = grp_calculateConvolution_fu_164_buffer_r_ce0.read();
    } else {
        buffer_ce0 = ap_const_logic_0;
    }
}

void conv2D::thread_buffer_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        buffer_d0 = grp_initializeBuffer_fu_188_buffer_r_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                 esl_seteq<1,1,1>(tmp_44_reg_428.read(), ap_const_lv1_0)))) {
        buffer_d0 = grp_updateBuffer_fu_174_buffer_r_d0.read();
    } else {
        buffer_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void conv2D::thread_buffer_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        buffer_we0 = grp_initializeBuffer_fu_188_buffer_r_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                 esl_seteq<1,1,1>(tmp_44_reg_428.read(), ap_const_lv1_0)))) {
        buffer_we0 = grp_updateBuffer_fu_174_buffer_r_we0.read();
    } else {
        buffer_we0 = ap_const_logic_0;
    }
}

void conv2D::thread_grp_calculateConvolution_fu_164_ap_start() {
    grp_calculateConvolution_fu_164_ap_start = grp_calculateConvolution_fu_164_ap_start_reg.read();
}

void conv2D::thread_grp_initializeBuffer_fu_188_ap_start() {
    grp_initializeBuffer_fu_188_ap_start = grp_initializeBuffer_fu_188_ap_start_reg.read();
}

void conv2D::thread_grp_updateBuffer_fu_174_ap_start() {
    grp_updateBuffer_fu_174_ap_start = grp_updateBuffer_fu_174_ap_start_reg.read();
}

void conv2D::thread_grp_updateBuffer_fu_174_index_col_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_updateBuffer_fu_174_index_col_out = index_col_out_1_s_reg_432.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(tmp_44_reg_428.read(), ap_const_lv1_0))) {
        grp_updateBuffer_fu_174_index_col_out = index_col_out_reg_152.read();
    } else {
        grp_updateBuffer_fu_174_index_col_out =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void conv2D::thread_in_data_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in_data_address0 = grp_initializeBuffer_fu_188_in_data_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                 esl_seteq<1,1,1>(tmp_44_reg_428.read(), ap_const_lv1_0)))) {
        in_data_address0 = grp_updateBuffer_fu_174_in_data_address0.read();
    } else {
        in_data_address0 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void conv2D::thread_in_data_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in_data_ce0 = grp_initializeBuffer_fu_188_in_data_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                 esl_seteq<1,1,1>(tmp_44_reg_428.read(), ap_const_lv1_0)))) {
        in_data_ce0 = grp_updateBuffer_fu_174_in_data_ce0.read();
    } else {
        in_data_ce0 = ap_const_logic_0;
    }
}

void conv2D::thread_index_col_out_1_1_fu_353_p2() {
    index_col_out_1_1_fu_353_p2 = (!ap_const_lv32_2.is_01() || !index_col_out_reg_152.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_2) + sc_biguint<32>(index_col_out_reg_152.read()));
}

void conv2D::thread_index_col_out_1_s_fu_342_p2() {
    index_col_out_1_s_fu_342_p2 = (index_col_out_reg_152.read() | ap_const_lv32_1);
}

void conv2D::thread_index_row_out_1_fu_242_p2() {
    index_row_out_1_fu_242_p2 = (!ap_const_lv31_1.is_01() || !index_row_out_reg_129.read().is_01())? sc_lv<31>(): (sc_biguint<31>(ap_const_lv31_1) + sc_biguint<31>(index_row_out_reg_129.read()));
}

void conv2D::thread_index_row_out_cast_fu_233_p1() {
    index_row_out_cast_fu_233_p1 = esl_zext<32,31>(index_row_out_reg_129.read());
}

void conv2D::thread_kernel_address0() {
    kernel_address0 = grp_calculateConvolution_fu_164_kernel_address0.read();
}

void conv2D::thread_kernel_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        kernel_ce0 = grp_calculateConvolution_fu_164_kernel_ce0.read();
    } else {
        kernel_ce0 = ap_const_logic_0;
    }
}

void conv2D::thread_next_mul_fu_227_p2() {
    next_mul_fu_227_p2 = (!ap_const_lv38_64.is_01() || !phi_mul_reg_141.read().is_01())? sc_lv<38>(): (sc_biguint<38>(ap_const_lv38_64) + sc_biguint<38>(phi_mul_reg_141.read()));
}

void conv2D::thread_out_data_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        out_data_address0 =  (sc_lv<14>) (tmp_27_cast_fu_367_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        out_data_address0 =  (sc_lv<14>) (tmp_25_cast_fu_337_p1.read());
    } else {
        out_data_address0 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void conv2D::thread_out_data_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(grp_calculateConvolution_fu_164_ap_done.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(grp_calculateConvolution_fu_164_ap_done.read(), ap_const_logic_1)))) {
        out_data_ce0 = ap_const_logic_1;
    } else {
        out_data_ce0 = ap_const_logic_0;
    }
}

void conv2D::thread_out_data_d0() {
    out_data_d0 = grp_calculateConvolution_fu_164_ap_return.read();
}

void conv2D::thread_out_data_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(grp_calculateConvolution_fu_164_ap_done.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(grp_calculateConvolution_fu_164_ap_done.read(), ap_const_logic_1)))) {
        out_data_we0 = ap_const_logic_1;
    } else {
        out_data_we0 = ap_const_logic_0;
    }
}

void conv2D::thread_p_lshr_fu_273_p4() {
    p_lshr_fu_273_p4 = p_neg_fu_268_p2.read().range(31, 1);
}

void conv2D::thread_p_neg_fu_268_p2() {
    p_neg_fu_268_p2 = (tmp_18_reg_396.read() ^ ap_const_lv32_FFFFFFFF);
}

void conv2D::thread_p_neg_t_fu_283_p2() {
    p_neg_t_fu_283_p2 = (!ap_const_lv31_0.is_01() || !p_lshr_fu_273_p4.read().is_01())? sc_lv<31>(): (sc_biguint<31>(ap_const_lv31_0) - sc_biguint<31>(p_lshr_fu_273_p4.read()));
}

void conv2D::thread_tmp_17_fu_211_p2() {
    tmp_17_fu_211_p2 = (!col_in.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(col_in.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void conv2D::thread_tmp_18_fu_217_p2() {
    tmp_18_fu_217_p2 = (!tmp_17_fu_211_p2.read().is_01() || !kernel_size_col.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_17_fu_211_p2.read()) - sc_biguint<32>(kernel_size_col.read()));
}

void conv2D::thread_tmp_18_op_op_fu_255_p2() {
    tmp_18_op_op_fu_255_p2 = (!tmp_18_reg_396.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_18_reg_396.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void conv2D::thread_tmp_19_fu_237_p2() {
    tmp_19_fu_237_p2 = (!index_row_out_cast_fu_233_p1.read().is_01() || !tmp_s_reg_391.read().is_01())? sc_lv<1>(): (sc_bigint<32>(index_row_out_cast_fu_233_p1.read()) < sc_bigint<32>(tmp_s_reg_391.read()));
}

void conv2D::thread_tmp_24_fu_332_p2() {
    tmp_24_fu_332_p2 = (!tmp_37_reg_404.read().is_01() || !tmp_45_fu_328_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_37_reg_404.read()) + sc_biguint<15>(tmp_45_fu_328_p1.read()));
}

void conv2D::thread_tmp_25_1_fu_348_p2() {
    tmp_25_1_fu_348_p2 = (!index_col_out_1_s_fu_342_p2.read().is_01() || !tmp_18_reg_396.read().is_01())? sc_lv<1>(): (sc_bigint<32>(index_col_out_1_s_fu_342_p2.read()) < sc_bigint<32>(tmp_18_reg_396.read()));
}

void conv2D::thread_tmp_25_cast_fu_337_p1() {
    tmp_25_cast_fu_337_p1 = esl_zext<64,15>(tmp_24_fu_332_p2.read());
}

void conv2D::thread_tmp_26_fu_362_p2() {
    tmp_26_fu_362_p2 = (!tmp_37_reg_404.read().is_01() || !tmp_46_fu_359_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_37_reg_404.read()) + sc_biguint<15>(tmp_46_fu_359_p1.read()));
}

void conv2D::thread_tmp_27_cast_fu_367_p1() {
    tmp_27_cast_fu_367_p1 = esl_zext<64,15>(tmp_26_fu_362_p2.read());
}

void conv2D::thread_tmp_37_fu_223_p1() {
    tmp_37_fu_223_p1 = phi_mul_reg_141.read().range(15-1, 0);
}

void conv2D::thread_tmp_38_fu_248_p3() {
    tmp_38_fu_248_p3 = tmp_18_reg_396.read().range(31, 31);
}

void conv2D::thread_tmp_39_fu_260_p3() {
    tmp_39_fu_260_p3 = tmp_18_op_op_fu_255_p2.read().range(31, 31);
}

void conv2D::thread_tmp_40_fu_289_p4() {
    tmp_40_fu_289_p4 = tmp_18_op_op_fu_255_p2.read().range(31, 1);
}

void conv2D::thread_tmp_41_fu_299_p3() {
    tmp_41_fu_299_p3 = (!tmp_39_fu_260_p3.read()[0].is_01())? sc_lv<31>(): ((tmp_39_fu_260_p3.read()[0].to_bool())? p_neg_t_fu_283_p2.read(): tmp_40_fu_289_p4.read());
}

void conv2D::thread_tmp_42_fu_307_p3() {
    tmp_42_fu_307_p3 = (!tmp_38_fu_248_p3.read()[0].is_01())? sc_lv<31>(): ((tmp_38_fu_248_p3.read()[0].to_bool())? ap_const_lv31_0: tmp_41_fu_299_p3.read());
}

void conv2D::thread_tmp_43_fu_315_p3() {
    tmp_43_fu_315_p3 = esl_concat<31,1>(tmp_42_fu_307_p3.read(), ap_const_lv1_0);
}

void conv2D::thread_tmp_44_fu_323_p2() {
    tmp_44_fu_323_p2 = (!index_col_out_reg_152.read().is_01() || !tmp_43_reg_423.read().is_01())? sc_lv<1>(): sc_lv<1>(index_col_out_reg_152.read() == tmp_43_reg_423.read());
}

void conv2D::thread_tmp_45_fu_328_p1() {
    tmp_45_fu_328_p1 = index_col_out_reg_152.read().range(15-1, 0);
}

void conv2D::thread_tmp_46_fu_359_p1() {
    tmp_46_fu_359_p1 = index_col_out_1_s_reg_432.read().range(15-1, 0);
}

void conv2D::thread_tmp_fu_199_p2() {
    tmp_fu_199_p2 = (!row_in.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(row_in.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void conv2D::thread_tmp_s_fu_205_p2() {
    tmp_s_fu_205_p2 = (!tmp_fu_199_p2.read().is_01() || !kernel_size_row.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_fu_199_p2.read()) - sc_biguint<32>(kernel_size_row.read()));
}

void conv2D::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_fu_237_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_initializeBuffer_fu_188_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(tmp_44_fu_323_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(grp_calculateConvolution_fu_164_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_block_state7_on_subcall_done.read(), ap_const_boolean_0) && (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_25_1_fu_348_p2.read()) || 
  esl_seteq<1,1,1>(tmp_44_reg_428.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(tmp_44_reg_428.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_state7_on_subcall_done.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_25_1_fu_348_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(grp_calculateConvolution_fu_164_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(grp_updateBuffer_fu_174_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

void conv2D::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_data_address0\" :  \"" << in_data_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_data_ce0\" :  \"" << in_data_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_data_q0\" :  \"" << in_data_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_data_address0\" :  \"" << out_data_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_data_ce0\" :  \"" << out_data_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_data_we0\" :  \"" << out_data_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_data_d0\" :  \"" << out_data_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"row_in\" :  \"" << row_in.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"col_in\" :  \"" << col_in.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_address0\" :  \"" << kernel_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_ce0\" :  \"" << kernel_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_q0\" :  \"" << kernel_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_size_row\" :  \"" << kernel_size_row.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_size_col\" :  \"" << kernel_size_col.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

